[{"title":"區塊元素和行內元素","url":"/2023/01/26/20230126-1527/","content":"區塊元素\n區塊元素\n\n\ndisplay: block;\n\n\n預設會占滿整個版面\n會以另起一行的方式來呈現\n像是 h1 p ul li div\n\n\n\n行內元素\n行內元素\n\n\ndisplay: inline;\n\n\n常用在段落裡面\n沒辦法設定寬高 (如果要改寬高可以加入display: block來調整)\n像是 a span img\n\n","categories":["HTML"],"tags":["CSS","block","inline","display"]},{"title":"CSS border 的用法","url":"/2023/01/20/20230120-1929/","content":"基本介紹border 的語法分別是 線條粗細 線條樣式 顏色\n\n像這個範例就是 1px 的黑色實心線\n\n\nborder: 1px solid #000;\n\n\n\n線條位置border 線條的順序是上 右 下 左\n除了使用 border 一起設定外，也可以單獨設定\nborder-top  // 上面的線\nborder-right  // 右邊的線\nborder-bottom  // 下面的線\nborder-left  // 左邊的線\n\n\n線條樣式比較常用的有下面這幾個：\n(這裡的線條粗細是用 5px 看比較清楚)\nsolid  // 實心線\n\n實心線\n\n\ndashed  // 虛線\n\n實心線\n\n\ndotted  // 圓點虛線\n\n實心線\n\n","categories":["CSS"],"tags":["CSS","border"]},{"title":"CSS 文字排版","url":"/2023/01/05/20230105-1430/","content":"CSS 中關於文字的排版，比較常會用到的設定大概有下面這些：\n字體font-family: Verdana;\n\n字體加粗\n這些字體變粗了\n\n\nfont-weight: bold;\n\n行距line-height: 1.5;\n\n字距\n改變字和字之間的距離\n\n\nletter-spacing: 3px;\n\n文字對齊方式一般預設是靠左，所以不寫的話就是靠左\n\nright 變成靠右對齊\n\n\ntext-align: right;\n\n\ncenter 變成置中對齊\n\n\ntext-align: center;\n\n\njustify 文字左右對齊(類似分散對齊)\n\n\ntext-align: justify;\n\n首行縮排\n假設文字大小是16px，text-indent: 32px 就是空2格，\n這段話的首行空了二格，第二行就沒有縮排了。\n\n\ntext-indent: 32px;\n\n文字加上下底線\n文字加上下底線\n\n\ntext-decoration: underline;\n\n文字刪除下底線連結常常會有下底線要刪除，就可以用這個\ntext-decoration: none;\n\n文字加上刪除線\n文字的中間有一條刪除線\n\n\ntext-decoration: line-through;\n\n漸變效果搭配opacity 0透明 1不透明\ntransition: all 3s;\n","categories":["CSS"],"tags":["CSS","文字排版"]},{"title":"margin 和 padding","url":"/2023/01/31/20230131-1124/","content":"margin向外推產生邊界\n\n不會影響本身的尺寸，但是會占網頁上的空間\n\n\n\n\nwidth: 100px;\nheight: 100px;\n\nmargin-top:10px;\n\n\n這兩個寬高都是 100px ，下面的設定 margin-top:10px;，因此往下推了 10px ，但尺寸還是和原本一樣寬高都還是 100px 。\n\n\npadding向內推產生留白\n\n\n\nwidth: 100px;\nheight: 100px;\n\n\n如果寬高設定為 100pxwidth: 100px;height: 100px;\n\n\n\n例一：增加 padding-top: 30px;這時實際的高度就變成 100px + 30px &#x3D; 130px 了像下圖這樣 ↓\n\n\npadding-top: 30px;\n\n\n\n\n\n例二：增加 padding: 20px;實際的高度和寬度就都變成 100px + 20px + 20px &#x3D; 140px 了像下圖這樣 ↓\n\n\npadding: 20px;\n\n\n\n\n\n例三：增加 padding: 20px; 和 border: 10px;實際的高度和寬度就都變成 100px + 20px + 20px + 10px + 10px &#x3D; 160px 了像下圖這樣 ↓\n\n\npadding: 20px;\nborder: 10px;\n\n","categories":["CSS"],"tags":["margin","padding"]},{"title":"不用計算盒模型的 box-sizing","url":"/2023/02/11/20230211-2021/","content":"用 box-sizing: border-box 盒模型的寬高不會改變，而是會將 padding 和 border 往內推，用這個方式就不用很辛苦的計算到底會推移了多少了。\nbox-sizing: border-box;\n\n\n\n\n假設寬高設定為 150px就是像下圖這樣 ↓\n\n\nwidth: 150px;\nheight: 150px;\n\n\n\n\n\n如果增加 border: 20px;就會變成像下圖這樣 ↓外觀的大小還是一樣不變但是 border 是往內推的\n\n\nborder: 20px;\nbox-sizing: border-box;\n\n\n\n\n\n另外，如果整個網頁都想要使用 box-sizing: border-box 來計算\n可以加入下面這個語法，就不用一個項目一個項目的加，而是整個網頁都有套用到效果了。\n*,*:before,*:after&#123;  box-sizing: border-box;&#125;\n","categories":["CSS"],"tags":["CSS","box-sizing"]},{"title":"Flex 網頁排版","url":"/2023/02/16/20230216-0950/","content":"Flex 基本觀念外面有容器，裡面是元件\n\n\n\n\n\n外面綠色包起來的是 Flex 外層屬性 外容器(Container)\n裡面咖啡色的部分則是 內元件(items)\n\n\n外層屬性 Container\n如果要讓 div 並排，必須在父層的 Container 下 display: flex;\n\ndisplay: flex;\n\n\n排版時如果下了 flex ，裡面 item 的 div 會依照寬度的比例自適應伸縮\n\n如果其中一個 div 高度較高，預設是會全部等高 (其他的也更著變高)\n\n\n\n\nFlex 軸線 flex-direction 可以決定 flex 軸線的方向\n而軸線又可以分成 主軸 (justify-content) 和 交錯軸 (align-items)\n\n\n主軸方向 flex-directionflex-direction 是寫在 Container 裡面\n決定 flex 的軸線是怎樣的方向\n(一) 從左到右\n預設是從左到右，所以不寫的話就是由左到右排列\n1 2 3\nflex-direction: row;\n\n\n\n(二) 從右到左\n3 2 1\nflex-direction: row-reverse;\n\n\n\n(三) 從上到下\n123\nflex-direction: column;\n\n\n\n(四) 從下到上\n321\nflex-direction: column-reverse;\n\n\n\n主軸對齊方式 justify-contentjustify-content 決定了主軸的對齊方式\n\n\n假設以 flex-direction: row(default) 也就是以預設的情形來說\n(下面的示意圖中，左右的 | 代表容器)\n(一) 從主軸的起點來對齊\n|1 2 3 ……|\njustify-content: flex-start;\n\n\n\n(二) 從主軸的終點來對齊\n|…… 1 2 3|\njustify-content: flex-end;\n\n\n\n(三) 置中對齊\n左右留白，內容置中對齊\n|… 1 2 3 …|\njustify-content: center;\n\n\n\n\n(四) 左右留白分配\n左右留白，內容平均分配\n|.1..2..3.|\njustify-content: space-around;\n\n或\n每個內容的左右留白都是一樣的\n|..1..2..3..|\njustify-content: space-evenly;\n\n\n\n\n(五) 左右貼齊，內容間留白\n|1…2…3|\njustify-content: space-between;\n\n\n\n交錯軸對齊方式 align-itemsalign-items 決定了交錯軸的對齊方式\n交錯軸會和主軸垂直\n這裡也假設以 flex-direction: row(default) 也就是以預設的情形來說\n(下面的示意圖中，左右的 | 代表容器)\n\n\n(一) 靠上排列\n從交錯軸的起點來對齊\n|1 2 3 ….||…………..||…………..|\nalign-items: flex-start;\n\n\n\n(二) 靠下排列\n從交錯軸的終點來對齊\n|…………..||…………..||1 2 3 ….|\nalign-items: flex-end;\n\n\n\n(三) 垂直置中\n|…………..||1 2 3 ….||…………..|\nalign-items: center;\n\n\n\n(四) 會以滿版的方式來呈現\n|1 2 3 ….||1 2 3 ….||1 2 3 ….|\n(三個1是同一個，只是被拉長了，2和3也是一樣)\nalign-items: stretch;\n\n\n\n(五) baseline\nalign-items: baseline;\n\n\n\n\n\n換行 flex-wrap(一) 不換行\n預設是不換行，會等比例縮小\n|1.2.3.4.5.6|\nflex-wrap: nowrap;\n\n\n\n(二) 換行\n超過的部分換換到下一行去\n|1.2.3.4||5.6……|\nflex-wrap: wrap;\n\n\n\n(三) 反向換行\n從下面開始排列，超過的部分換換到上一行\n|5.6……||1.2.3.4|\nflex-wrap: wrap-reverse;\n\n","categories":["CSS"],"tags":["Flex"]},{"title":"使用 Flex 設計一個並排選單","url":"/2023/02/20/20230220-1010/","content":"使用 flex 來做選單\ndisplay: flex 是下在 li 的父層 ul 上 (.menu)\nflex-direction 是用預設的 row\n選單按鈕有加大，滑鼠移過去會變顏色\n另外 a 標籤是行內元素，所以要加入 display: block\n效果就像是這樣 ↓\n\n\n\n\n\n\n程式碼部分\n&lt;ul class=&quot;menu&quot;&gt;  &lt;li&gt;&lt;a href=&quot;#&quot;&gt;首頁&lt;/a&gt;&lt;/li&gt;  &lt;li&gt;&lt;a href=&quot;#&quot;&gt;關於我&lt;/a&gt;&lt;/li&gt;  &lt;li&gt;&lt;a href=&quot;#&quot;&gt;問與答&lt;/a&gt;&lt;/li&gt;  &lt;li&gt;&lt;a href=&quot;#&quot;&gt;了解更多&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;\n\n\n.menu&#123;  width: 400px;  margin: 0 auto;  display: flex;&#125;.menu li&#123;  width: 100px;  text-align: center;  border: 1px solid #000;&#125;.menu li a&#123;  display: block;  background: orange;  color: #fff;  text-decoration: none;  padding-top: 10px;  padding-bottom: 10px;&#125;.menu li a:hover&#123;  background: pink;&#125;\n","categories":["CSS"],"tags":["CSS","Flex","並排選單"]},{"title":"實作有 logo 和選單的表頭區","url":"/2023/02/27/20230227-1127/","content":"這裡要來練習做一個有 logo 圖片和選單的表頭\n左方是 logo 圖片，右方是選單連結\n第一個方法是用 flex 的方式，第二個方法是用 float 的方式\nflex外層的 div (.header) 下了 display: flex ，使圖片和連結文字左右排\n內層的 ul (.menu)  也下了 display: flex ，使首頁、咖啡…這幾個連結變成橫的排列\n效果就像是這樣 ↓\n\n\n\n\n\n\n程式碼部分\n&lt;div class=&quot;header&quot;&gt;  &lt;a class=&quot;logo&quot; href=&quot;#&quot;&gt;&lt;img src=&quot;https://i.postimg.cc/g0VM1xCr/coffee-logo.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt;  &lt;ul class=&quot;menu&quot;&gt;    &lt;li&gt;&lt;a href=&quot;&quot;&gt;首頁&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;&quot;&gt;咖啡&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;&quot;&gt;甜點&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;&quot;&gt;輕食&lt;/a&gt;&lt;/li&gt;  &lt;/ul&gt;&lt;/div&gt;\n\n\n\n.header&#123;  display: flex;  width: 950px;  margin: 0 auto;  justify-content:space-between;  align-items: center;&#125;.menu&#123;  width: 400px;  margin: 0 auto;  display: flex;&#125;.menu li&#123;  width: 80px;  text-align: center;  border: 1px solid #000;&#125;.menu li a&#123;  display: block;  background: #804040;  color: #fff;  text-decoration: none;  padding-top: 20px;  padding-bottom: 20px;&#125;.menu li a:hover&#123;  background: #B87070;&#125;\n\n\n\nfloat這個部分試試看用 logo 圖片來取代文字\nlogo 是設定在 h1 的 a 連結裡面，h1 有輸入店名 coffee\n但是網頁上不要顯示 coffee ，只要 logo 圖片就好\n這樣可以在 a 連結輸入這三行\ntext-indent: 101%;overflow: hidden;white-space: nowrap;\n\na 連結有設定寬度，文字縮排 101% 就會超出範圍\n接著設定超出的部分隱藏、不換行，這樣就只會顯示圖片了\n\n\nfloat 的部分則是在 h1 設定 float: left， logo 圖片就會浮在畫面左邊\n選單原本是直的排列，在 li 設定 float: left，就會變成橫的排列\n但選單是在左邊，因此要在 ul 設定 float: right，整個選單就會在右邊了\n\n\n\n\n\n\n程式碼部分\n&lt;div class=&quot;header&quot;&gt;  &lt;h1&gt;&lt;a class=&quot;logo&quot; href=&quot;#&quot;&gt;coffee&lt;/a&gt;&lt;/h1&gt;  &lt;ul class=&quot;menu&quot;&gt;    &lt;li&gt;&lt;a href=&quot;&quot;&gt;首頁&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;&quot;&gt;咖啡&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;&quot;&gt;甜點&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;&quot;&gt;輕食&lt;/a&gt;&lt;/li&gt;  &lt;/ul&gt;&lt;/div&gt;\n\n\n\n.header &#123;  width: 750px;  margin: 0 auto;&#125;h1 &#123;  float: left;&#125;h1 a &#123;  width: 180px;  height: 135px;  background-image: url(https://i.postimg.cc/g0VM1xCr/coffee-logo.png);  display: block;  text-indent: 101%;  overflow: hidden;  white-space: nowrap;&#125;.menu &#123;  width: 400px;  float: right;  margin: 40px;&#125;.menu li &#123;  width: 80px;  text-align: center;  border: 1px solid #000;  float: left;&#125;.menu li a &#123;  display: block;  background: #804040;  color: #fff;  text-decoration: none;  padding-top: 20px;  padding-bottom: 20px;&#125;.menu li a:hover &#123;  background: #B87070;&#125;\n","categories":["CSS"],"tags":["Flex","float"]},{"title":"相對定位和絕對定位","url":"/2023/03/09/20230309-0938/","content":"相對定位和絕對定位在外層加上 position: relative; ，內層加上 position: absolute;，就可以控制位置\n(外層用了紅色的 border 比較容易看清楚位置)\n像是這樣 ↓\n\n\n\n\n\n\n上面這個是設定 right: 0; bottom: 0; ，所以咖啡色的 box 是在右下角\n如果改成 left: 0; top: 0; ，就會變成在左上角了\n如果剛剛的 bottom: 0; 改成 bottom: -5px; ，就會往下超過 5px 的位置\n因此可以藉由絕對定位來網頁元素的位置要放在哪裡，或是要重疊的設計也是可以\n\n\n外層\nposition: relative;\n\n\n\n內層\nposition: absolute;\n\n\n\n如果只有在內層加上 position: absolute; ，外層什麼都沒有寫，就會以瀏覽器當作坐標，由左上角開始跑位置\n\n\nz-index這裡設定了3個 box ，box1 是紅色， box2 是橘色， box3 是綠色\n\n\n\n\n\n\n一般來說，如果有多個元素重疊，後面的會蓋掉前面的\n所以橘色的 box2 會蓋住紅色的 box1\n然後在最後面的綠色 box3 會蓋住橘色的 box2\n\n\n這時如果設定 z-index 改變前後順序，數字越大就會在越上方\n我在 box1 設定 z-index: 5;\nbox2 設定 z-index: 6;\nbox3 設定 z-index: 2;\n因此原本應該在最上面的綠色 box3 就跑到最下面去了\n","categories":["CSS"],"tags":["相對定位","絕對定位","relative","absolute","z-index"]},{"title":"設計產品列表和優惠標籤","url":"/2023/03/15/20230315-2149/","content":"產品列表和優惠標籤，整個弄完之後像這樣 ↓\n\n\n\n\n\n\n接下來分別說明\n商品列表先用 ul 和 li 設計商品欄位，再插入 img 圖片\n圖片設定 width: 100% 就不會因為圖片太大而超出版面\n下面文字部分用 h2 和 span 寫商品名和價格\nli 加入 float: left 讓每個商品並排\n商品列表設定寬度 ，每個商品也要計算寬度 (border 、\tmargin 、 padding 要記得計算進去)\n\n\n優惠價標籤新增一個 .sale 的 div ，設定絕對定位和相對定位\n接著用 top: 0 和 left: 0 將這個標籤擺放在左上角\n然後再稍微修改一下樣式和 padding 就完成了\n\n\n其他補充在使用 float 時\n避免子元素使用 float: left 時跑版\n可以在父元素加入\ndisplay: flow-root;\n","categories":["CSS"],"tags":["相對定位","絕對定位","float","flow-root"]},{"title":"可以固定位置的 position fixd","url":"/2023/03/21/20230321-1128/","content":"使用 position: fixed; 就可以把元素固定在畫面上\n這裡設計了一個橘色的方框框\n利用 bottom: 0; 和 right: 0; 就可以固定在右下角\n滑鼠在滑動內容時，也不會被影響，會一直釘在右下角\n\n\n\n\n\n\nposition: fixed;\n","categories":["CSS"],"tags":["position","fixd"]},{"title":"偽元素 ::before 和 ::after","url":"/2023/03/27/20230327-1356/","content":"偽元素 Pseudo-element 不是實際存在於 HTML 代碼中的元素，而是由 CSS 來控制的虛擬元素，偽元素讓我們可以在不改變  HTML 的情況下，在特定的地方加上一些特殊樣式或內容，這樣就可以簡化代碼，也可以實現更多的外觀設計的效果。\n\n\n偽元素是以 :: 雙冒號開始，其中 ::before 和 ::after 是最常被使用的兩個偽元素 \n::before 可以在原本的元素內容之前插入其他內容\n而 ::after 則可以在原本的元素內容之後插入其他內容\n另外要注意的是裡面要一定有 content 這個屬性才行\n\n\n\n例一：文字內容在 content 裡面打內容，畫面上的偽元素就會出現這些內容\n\n\n\n\n\n\n\n\n例二：改變位置的 box如果沒有要打內容可以空白 content: “”中間的橘色 box 是原本的 div左邊的紅色 box 是 ::before右邊的綠色綠色 box 是 ::after這裡也有搭配之前說的絕對定位和相對定位來改變位置\n\n\n\n\n\n\n\n\n\n例三：左右的直線在文字的左右方中間加上一條直線直線的顏色是用 background 來改變，有點像是上面 box 的例子只是左右各加了一條超級細的 box \n\n\n\n\n\n\n\n\n例四：互動特效滑鼠停在上面時，會出現動畫效果上下那條原本的寬度是0，滑鼠過去時 (:hover) 寬度就變成 100%滑鼠離開又變回0，然後搭配 transition 讓它慢慢移動上面的那條是 ::before ，下面的是 ::after可以看第二個紅色的會比較清楚\n\n\n\n\n\n\n\n\n\n\n\nreference\n\n重新認識 CSS - Pseudo-element (偽元素)\n\n全都是假的，一起來認識偽元素！\n\nCSS | 全都是假的！關於那些偽類和偽元素 - 基本用法\n\n\n","categories":["CSS"],"tags":["偽元素","::before","::after"]},{"title":"用 CSS 來製作各種形狀","url":"/2023/03/31/20230331-1301/","content":"正方形正方形只要把寬和高都設定一樣就可以了\n\n\n\n\n\n\n長方形長方形只要把寬和高的其中一個設定長一點，另一個設定短一點就行了\n\n\n\n\n\n\n圓形設定 border-radius: 50% 就可以把正方形改成圓形了\n\n\n\n\n\n\n橢圓形先設定一個長方形\n接著和圓形一樣設定 border-radius: 50% 就可以把長方形變成橢圓形了\n\n\n\n\n\n\n三角形三角形的部分是把矩形分成上面兩個三角形和下面一個三角形\n上面那兩個三角形的顏色設定成透明的 (transparent) \n下面則改為自己需要的三角形顏色\n\n\n\n\n\n\n五角形在研究要怎麼做出來的時候，發現一個很厲害的網站 clippy\n只要用 clip-path 就可以做出需要的形狀了\n點選需要的形狀，可以自己改變角度，然後複製下方的程式碼就好了\n像這個正五角形就是\nclip-path: polygon(50% 0%, 100% 38%, 82% 100%, 18% 100%, 0% 38%)\n\n\n\n\n\n\n\n六角形這個也是用 clip-path 來做出想要的角度\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nreference\n\n運用 clip-path 的純 CSS 形狀變換\n\nclippy\n\n\n","categories":["CSS"],"tags":["形狀","clip-path"]},{"title":"CSS 的書寫方向 writing-mode","url":"/2023/04/05/20230405-1827/","content":"CSS 的 writing-mode 指的是文字是水平的還是垂直的\n分成下面幾種排列方式\n(一)水平由左至右，也就是預設的屬性\nwriting-mode: horizontal-tb;\n\n(二)垂直由左至右\nwriting-mode: vertical-lr; \n\n(三)垂直由右至左\nwriting-mode: vertical-rl;\n\n\n\n\n\n\n\n從上面可以看到中文字的部分變成垂直由上而下的方式排列\n但是英文和數字則是直接旋轉90度\n如果也是要由上而下的方式排列的話\n要再加上\ntext-orientation: upright;\n\n英文和數字就會一個字一個字的排列了\n\n\n\n\n\n\n\n\n\n\nreference\n\nCSS writing-mode Property\n\n[CSS] writing-mode 垂直文字文本行是水平還是垂直放置\n\n\n","categories":["CSS"],"tags":["寫入模式","文字方向"]},{"title":"表格 (Table) 標籤","url":"/2023/04/07/20230407-2019/","content":"表格的最外層用一個 table 包起來\n裡面則是用一列一列的方式來寫\n\n\n標題部分是用 tr 和 th 組成\n&lt;table&gt;  &lt;tr&gt;    &lt;th&gt;標題一&lt;/th&gt;    &lt;th&gt;標題二&lt;/th&gt;    &lt;th&gt;標題三&lt;/th&gt;  &lt;/tr&gt;&lt;/table&gt;\n\n\n\n內容部分則是由 tr 和 td 組成\n&lt;table&gt;  &lt;tr&gt;    &lt;td&gt;內容一&lt;/td&gt;    &lt;td&gt;內容二&lt;/td&gt;    &lt;td&gt;內容三&lt;/td&gt;  &lt;/tr&gt;&lt;/table&gt;\n\n\n\n表格內容的每一列都是由 tr 和 td 組成\n所以要增加表格下面的內容，就再增加一組 tr 和 td \n\n\n\n\n\n\nCSS 的部分則是有針對表格做一些樣式的修改\n","categories":["HTML"],"tags":["table","表格"]},{"title":"背景圖片延伸顏色","url":"/2023/04/12/20230412-2055/","content":"假設網頁要用的圖片是漸層的顏色\n像這張這樣上面藍藍下面橘橘的\n\n\n\n這時如果使用 background-image: url()\n背景就會垂直和水平都重複的方式排列\n看起來就會怪怪的\n\n\n\n預設是水平和垂直都會重複，如果要改的話要另外設定\nno-repeat 是不重複\nrepeat-x 只會水平重複\nrepeat-y 只會垂直重複\n\n\n我們可以讓圖片水平重複就好 background-repeat: repeat-x\n\n剩下的部分改成用 background-color\n選取最下面的橘色的色碼 #feb96c;\n這樣就可以做出好看的漸層背景了\n\n\n\n\n\n","categories":["CSS"],"tags":["background","repeat"]},{"title":"背景圖片位置和縮寫","url":"/2023/04/16/20230416-1328/","content":"我們新增背景圖片時，如果沒有重複顯示，預設的位置會在左上角\n\n\n\n如果要改變位置可以使用 background-position\n以左上角為起點\n像是 background-position: right bottom;\n就會像是下圖這樣\n\nbackground-position: right bottom;\n前面的 right 是X軸，也可以寫 left\n後面的 bottom 是Y軸也可以寫 top\n\n\nbackground-position 也可以寫成像素\n像是 background-position: 30px 50px; 就是往右 30px ，往下 50px\n\n\n\n要寫成 % 也是可以\nbackground-position: 60% 90%; 就是往右 60% ，往下 90%\n\n\n\n另外，background 也可以縮寫，項目就不會寫很多\n原本的\nbackground-image: url(https://i.postimg.cc/sXYDRSpC/1.jpg);background-repeat: no-repeat;background-color: #CF9E9E;background-position: 60% 90%;\n\n可以縮寫成\nbackground: url(https://i.postimg.cc/sXYDRSpC/1.jpg) no-repeat #CF9E9E 60% 90%;\n\n這樣只要一行就可以寫完了\n\n\n\n\n\n","categories":["CSS"],"tags":["background","縮寫","簡寫"]},{"title":"Form 表單的常用標籤","url":"/2023/04/20/20230420-1037/","content":"表單結構表單的最外層用一個 &lt;form&gt; 包起來\n裡面的輸入欄位則視需要來設計需要的項目\n最後則使用是 submit 來傳送資料\n類似像這樣\n\n\n\n\n\n\nsubmit 是用 &lt;input&gt; 標籤，在 type 寫上 submit\nvalue 寫上要顯示的文字\n\n\nplaceholder 和 label如果輸入欄位不要空白，可以在 placeholder 填上內容\n這個只會提示在畫面上，要輸入內容時就會不見了\n就像是範例的 請輸入電子郵件 這幾個字\n\n\n如果輸入欄前面想要有項目名稱，可以在輸入欄位前加上 &lt;label&gt;\n另外，以這個範例來說，如果想要點電子郵件的文字，就會直接跳到對應的輸入框的話\n可以在 &lt;label&gt; 裡面填上 for ，和它對應的 &lt;input&gt; 裡面則填上 id\n記得這2個填的內容要一樣\n\n\n\n\n\n\nradio 和 checkbox如果是單選，就使用 radio ，如果是複選，就使用 checkbox\nradio 的寫法像下面這樣\n&lt;input type=&quot;radio&quot; name=&quot;radio&quot; value=&quot;radio1&quot;&gt;radio1\n\n在 &lt;input&gt; 的 type 寫上 radio \nname 的部分則是這一組的 radio 都要寫一樣，這樣才能單選\nvalue 則是送出時，後端資料庫會收到的資料\n(只會看到 value 內容，並不會看到網頁上表單的其他內容)\n最後面則填上要顯示在畫面上的名稱\n\n\ncheckbox 部分像是這樣\n&lt;input type=&quot;checkbox&quot; name=&quot;checkbox&quot; value=&quot;checkbox1&quot;&gt;checkbox1\n\n在 &lt;input&gt; 的 type 寫上 checkbox\nname 的部分也是這一組的 checkbox 都寫一樣\nvalue 一樣也是送出時，資料庫會收到的資料\n最後面也是填上要顯示在畫面上的名稱\n\n\n\n\n\n\nselectselect 是下拉式選單\n&lt;select name=&quot;age&quot;&gt;    &lt;option value=&quot;3&quot;&gt;3&lt;/option&gt;\n\n首先，新增一個 &lt;select&gt; 標籤， name 填入這個選單的內容\n選項則是用 &lt;option&gt; ，要幾個選項就填幾個 &lt;option&gt;\nvalue 一樣也是送出時，資料庫會收到的資料\n像這個就會收到 age &#x3D; 3 的資料\n所以 name 不能隨便取，不然會很難看懂到底填了什麼\n\n\n\n\n\n\ntextarea&lt;textarea&gt; 是多行文字輸入，可以輸入較多的內容\n&lt;textarea name=&quot;message&quot; cols=&quot;30&quot; rows=&quot;7&quot;&gt;&lt;/textarea&gt;\n\ncols 是每行可以輸入多少字元\nrows 是總共可以輸入幾行\n\n\n\n\n\n\n","categories":["HTML"],"tags":["下拉選單","輸入框","日期選單"]},{"title":"Form 表單的常用樣式","url":"/2023/04/25/20230425-1944/","content":"表單其實也可以修改樣式\n下面列出一些比較常用的樣式\n&lt;input&gt; 和按鈕都可以改樣式\n可以改字的大小、寬度、文字和背景顏色、邊框、或是外框的樣式等\n像是這個範例這樣 ↓\n\n\n\n\n\n\n\nborder: 2px solid red;/* 邊框 */color: green; /* 輸入的文字顏色 */background: pink; /* 背景顏色 */border-radius: 5px; /* 圓弧效果 */cursor: pointer; /* 滑鼠效果 */\n\n\n\n另外，如果不要點一下出現邊框的話，可以加上這個\nborder: 0;\n\n或是\nborder: none;\n","categories":["CSS"],"tags":["btn","button","cursor","滑鼠","圓弧邊框"]},{"title":"CSS 效果技巧","url":"/2023/04/28/20230428-1122/","content":"圓弧效果可以利用 CSS 去設計一些圓弧的效果\n\n\n\n\n\n\n\n主要是利用 border-radius 來控制\n像這裡的\nborder-radius: 50px 0 20px 0;\n\n後面四個數值分別代表 左上 右上 右下 左下\n改變數值就可以改變形狀\n\n\n要在這個形狀的外面加上邊框也是可以的\n就用之前說過的 border 就可以在外圍加上邊框\n\n\n另外，如果裡面有打文字\n想要水平置中就使用 text-align: center\n如果只有單行，想要垂直置中時\n可以看這個容器的高度是多少， line-height 就設定一樣\n像這個範例高度是 170px ，因此 line-height 就設定 170px\n這樣就會垂直置中了\n\n\n背景漸層效果\n\n\n\n\n\n由上到下只要加上 background: linear-gradient(上面顏色,下面顏色)\n這樣就可以做出漸層的效果\n這個漸層是由上到下，這個是預設的\n\n\n由左到右如果要變成由左到右\n就在前面加上 to right\nbackground: linear-gradient(to right,purple,orange);\n\n就會從左邊的紫色漸層到右邊的橘色了\n\n\n由右到左要改成由右到左也是和由左到右差不多\n只是變成 to left\nbackground: linear-gradient(to left,purple,orange);\n\n就會從右邊的紫色漸層到左邊的橘色了\n\n\n由左上到右下要改成左上到右下的漸層方式，就用 to bottom right\nbackground: linear-gradient(to bottom right,purple,orange);\n\n這樣就會從左上的紫色漸層到右下的橘色\n\n\n由右上到左下同理，如果是要由右上到左下，就改成  to bottom right\nbackground: linear-gradient(to bottom left,purple,orange);\n\n這樣就會從右上的紫色漸層到左下的橘色\n\n\n多顏色漸層如果想要多個顏色漸層，就在後面加入多個顏色\nbackground-image: linear-gradient(red,orange,yellow,green,blue,purple);\n\n就會從第一個顏色漸層到最後一個顏色了\n\n\n文字漸層效果CSS 也可以將文字顏色改成漸層的效果\n\n\n\n\n\n\n先將文字的顏色改成透明的 color: transparent\n接著是設定背景顏色\nbackground-image: linear-gradient(purple, orange)\n預設是由上到下的漸層方式，也可以利用剛剛背景漸層的方式來改變漸層方向\n最後是將背景裁切成文字範圍 background-clip: text 就成功了\n\n\n陰影效果使用 box-shadow 來增加陰影效果\n\n\n\n\n\n\n後面四個分別是 box-shadow: X軸 Y軸 擴散值 顏色\n\n\n半透明背景前面是顏色，最後一個是透明度，數字越小越透明\nbackground-color: rgba(0,0,0,0.2);\n\n\n\n\n\n\n\nreference\n\nCSS Gradients\nCSS：文字漸層與鏤空遮罩效果\n\n","categories":["CSS"],"tags":["圓弧","漸層","影子"]},{"title":"滑鼠移過去才會出現的特效","url":"/2023/05/06/20230506-2005/","content":"如果想要保持畫面的乾淨美觀，但又想要有說明文字\n就可以用這個方法\n一開始先隱藏起來，滑鼠移過去時才會出現\n\n\n\n\n\n\n\n\n先設計一個圖片列表，然後下面有說明文字\n\n\n在 li 設定 position: relative 和 overflow: hidden\n\n\n裡面的說明文字設定 position: absolute ，接著把位置設定在 bottom &#x3D; 負值 ，說明文字就會因為超出 li 的範圍而隱藏起來\n\n\n這時只要設定一個 hover 時 bottom = 0 ，說明文字就會出現了\n\n\n然後因為不要出現的那麼突然，所以有加一個漸變 transition: all 1s ，讓說明文字可以慢慢出現和消失\n\n\nCSS 的程式碼部分 ↓\nli &#123;  width: 120px;  height: 180px;  float: left;  margin: 7px;  position: relative;  overflow: hidden;&#125;li:hover .title &#123;  bottom: 0;&#125;.title &#123;  background: gray;  color: #fff;  text-align: center;  padding: 7px 0;  position: absolute;  width: 100%;  bottom: -30px;  transition: all 1s;&#125;\n","categories":["CSS"],"tags":["滑鼠特效","hover","transition"]},{"title":"製作 banner 區的圖片輪播","url":"/2023/05/02/20230502-2118/","content":"這裡要來製作一般網頁常見的 banner 圖片輪播\n我試了二種方法，一種是參考別人單純使用 CSS 及 HTML 的方法\n另一種是用 Swiper 套件來製作，弄好久終於成功了\n\n\n首先，圖片部分設定了二組，各五張\n一組是桌面版的圖片，場景比較廣、比較遠\n\n另一組是平版手機版的圖片，畫面有拉近的感覺\n\n斷點則是設定在 767px 以下時會是平板手機版的圖片， 768px 以上時是桌面版的圖片\n\n\n\nmax-width，表示這個數字以下（包含） 的都適用。(&lt;&#x3D;)min-width，表示這個數字以上（包含） 的都適用。(&gt;&#x3D;)\n\n\n\n因此用 max-width: 767px (當畫面小於 767px時)\ndesktop-only (桌面版的圖片) 會 display: none (隱藏起來)\n只有顯示平板手機版的圖片\n而當 min-width: 768px (當畫面大於 768px時)\nmobile-only (平板手機版的圖片) 會 display: none (隱藏起來)\n只有顯示桌面版的圖片\n\n\n@media (max-width: 767px) &#123;  .desktop-only &#123;    display: none !important;  &#125; &#125;@media (min-width: 768px) &#123;  .mobile-only &#123;    display: none !important;  &#125;&#125;\n\n\n\n另外，圖片也有加入\nimg &#123;  max-width: 100%;  height: auto;&#125;\n\n變成響應式圖片\n圖片會隨著視窗的大小來調整比例\n下面也不會有卷軸出現\n\n\n淡入淡出圖片輪播這一種是淡入淡出的形式來切換圖片，只有用到 html 及 CSS\n\n\n\n\n\n\n有5張圖片，整個週期是20秒\n所以每4秒會淡出淡入的換下一張圖片\n當滑鼠停在圖片上時，會停止切換圖片，停在當下的畫面\n\n\n使用 Swiper 套件如果只有一組桌面版的圖片，直接照著官方的說明套用就可以了\n但我還多了一組平板手機版的圖片\n本來直接加在桌面版的圖片下面，結果下面的分頁點點變成10個\n輪播時變成一張有圖片，一張空白的方式在輪播\n後來把2組圖片各自獨立用 div 包起來\n但是只有前面的那組成功，後面的那組會停在第一張圖片，左右切換也沒辦法用\n最後乾脆直接把最外面的 div (swiper) 設定了2組，結果就成功了！\n\n\n\n  See the Pen \n  swiper by Nora (@Nora2207)\n  on CodePen.\n\n\n\n\n左右的箭頭有改成有點透明的灰色，滑鼠移過去會變藍色\n\n\n接著來說一下 JS 的設定\ncssMode: true 預設是 false ， true 表示套用 cssMode 這個樣式\nloop: true 預設是 false ， true 表示圖片會循環，第五張之後會回到第一張這樣循環\nclickable: true 可以直接點選下面分頁的點點來切換圖片\nautoplay: &#123; delay: 3000,&#125; 自動輪播圖片， 3000 表示3秒換一張圖片\n\n\n另外在補充比較常用的設定\ndirection 輪播方向，預設是 horizontal 水平的，也可以改成 vertical 垂直的 \neffect 輪播效果，預設是 &#39;slide&#39;，其他還有 &#39;fade&#39; &#39;cube&#39; &#39;coverflow&#39; &#39;flip&#39; &#39;creative&#39; 可以選擇\n\n\n如果想要 scrollbar 可以加上\n&lt;div class=&quot;swiper-scrollbar&quot;&gt;&lt;/div&gt;\n\nscrollbar: &#123;    el: &#x27;.swiper-scrollbar&#x27;,  &#125;,\n\n\n\n\n\n\n\nreference\n\nDay22：小事之 Media Query\n\n如何單純使用CSS3及HTML製作圖片輪播效果\n\nSwiper\n\n\n","categories":["CSS"],"tags":["banner","圖片輪播","響應式圖片","Swiper"]},{"title":"Emmet 熱鍵","url":"/2023/05/13/20230513-1429/","content":"HTML 部分link:css\n&lt;link rel=&quot;stylesheet&quot; href=&quot;style.css&quot;&gt;\n\n\n\ndiv+p\n&lt;div&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;\n\n\n\ndiv&#123;這裡打文字&#125;\n&lt;div&gt;這裡打文字&lt;/div&gt;\n\n\n\ndiv[alt=文字]\n&lt;div alt=&quot;文字&quot;&gt;&lt;/div&gt;\n\n\n\n(.box&gt;h1)*3\n&lt;div class=&quot;box&quot;&gt;  &lt;h1&gt;&lt;/h1&gt;&lt;/div&gt;&lt;div class=&quot;box&quot;&gt;\t&lt;h1&gt;&lt;/h1&gt;&lt;/div&gt;&lt;div class=&quot;box&quot;&gt;\t&lt;h1&gt;&lt;/h1&gt;&lt;/div&gt;\n\n\n\np.box$*2\n&lt;p class=&quot;box1&quot;&gt;&lt;/p&gt;&lt;p class=&quot;box2&quot;&gt;&lt;/p&gt;\n\n\n\nCSS 部分m0\nmargin: 0;\n\n\n\nc#000\ncolor: #000;\n\n\n\nfl\nfloat: left;\n\n\n\npos-r\nposition: relative;\n","categories":["HTML"]},{"title":"製作即時放大和縮小字體的按鈕","url":"/2023/05/16/20230516-1546/","content":"有些網頁上會有放大、縮小字體的按鈕\n這樣可以很方便的改變字體的大小\n\n\n\n\n\n\n原本的文字大小設定 16px ，也就是”中”的字體大小\n使用 jQuery 的 .css 來使字體大小變成”大” 24px 和”小”12px\n像是這樣 ↓\n$(&#x27;.font-b&#x27;).click(function(event) &#123;    event.preventDefault();    $(&#x27;.content p&#x27;).css(&#x27;font-size&#x27;,&#x27;24px&#x27;);  &#125;);\n","categories":["jQuery"],"tags":["jQuery","改變字體大小","文字大小"]},{"title":"使用 fix 來固定網頁特定內容","url":"/2023/05/18/20230518-1907/","content":"網頁上常常會有廣告或提示之類的小框框固定在網頁的右下或左下\n要按 X 才會消失不見\n這裡來製作一個類似的告知訊息小框框\n\n\n\n\n\n\nCSS 部分\n這個框框是使用 position: fixed 來固定在左下角\nposition: fixed;bottom: 0;left: 0;\n\n這樣就算卷軸移動時，都會一直固定在左下角\n如果要固定在右下角就是\nposition: fixed;bottom: 0;right: 0;\n\n\n\n右上角的關閉按鈕則是使用絕對定位的方式固定在右上角\nposition: absolute;top: 0;right: 0;\n\n\n\njQuery 部分\n設定點擊關閉按鈕時，整個區塊會隱藏起來\n使用 .hide 來操作\n$(&#x27;.ad-close&#x27;).click(function(event) &#123;    event.preventDefault();    $(&#x27;.ad&#x27;).hide();  &#125;);\n","categories":["jQuery"],"tags":["廣告版位","關閉廣告","提示框"]},{"title":"從左右出現的 offcanvas 選單","url":"/2023/05/25/20230525-1308/","content":"offcanvas 選單\n圖示的部分是用 fontawesome\n點了左上角的三條線圖示，側邊選單會從左邊出來\n點叉叉圖示，選單會關閉\n\n\n\n\n\n\n左側出現的 off-canvas 選單 CSS 部分 上下都設定 0 可以有滿版效果\n然後設定 transform: translateX(-200px) 和 overflow: hidden\n這樣寬是 200 ， -200 就會往左邊 200px ，剛好會在畫面外不顯示\n\n\n接著再設定 open 時 main 會從 0px 往右移 200px\naside 會從 -200px 移到 0px 的位置\n(其實就是全部往右移 200px 啦)\n\n\n然後再搭配 jQuery\n點擊 (click) sidebar (三條線) 時\nbody 增加 (addClass) open (右移 200px) 的 class\n$(&#x27;.sidebar&#x27;).click(function(e) &#123;  $(&#x27;body&#x27;).addClass(&#x27;open&#x27;);&#125;);\n\n\n\n另一個叉叉關閉的則是\n點擊 (click) close (叉叉) 時\nbody 移除 (removeClass) open (右移 200px) 的 class\n$(&#x27;.close&#x27;).click(function(e) &#123;  $(&#x27;body&#x27;).removeClass(&#x27;open&#x27;);&#125;);\n","categories":["jQuery"],"tags":["CSS","漢堡選單","響應式","RWD 選單"]},{"title":"使用 Animate.css 來加入更多的動畫效果","url":"/2023/05/29/20230529-1629/","content":"這裡來介紹 Animate.css\n裡面有很多的 CSS 動畫效果\n使用的方法也很簡單\n可以用 npm 或 CDN 的方式載入\n然後在要用動畫的地方加入 class 名稱就好了\n這裡就來測試幾個看看\n\n\n\n\n\n\n在要動畫的元素上加上 animate__animated 這個 class 名稱\n\n\njQuery 的部分則是用 addClass 來加入那一個 class 動畫效果就可以了\n$(&#x27;.btn1&#x27;).click(function(e) &#123;  $(&#x27;.box1&#x27;).addClass(&#x27;animate__pulse&#x27;);&#125;);\n","categories":["jQuery"],"tags":["動畫效果","class"]},{"title":"Hexo 常用指令","url":"/2023/01/03/20230103-1747/","content":"這裡記錄一些我在寫文章時會用到的指令和寫法\n新增文章$ hexo new post &quot;文章標題&quot;\n\n新增草稿文章$ hexo new draft &quot;草稿文章標題&quot;\n\n標籤 Tags文章裡面的多個標籤輸入方法，在 tags: 項目打上\n- 標籤1- 標籤2- 標籤3\n\n文章標題文章的大標題是用 ## ，項目的標題是用 ###\n## 文章的標題### 項目標題\n\n插入連結[文字說明](網址)\n\n插入圖片![圖片名稱](連結 &quot;滑鼠移過去顯示內容&quot;)\n\n引言\n引言就是長這樣的框框\n\n&gt; 引言寫這裡\n\n程式碼前後各三個反引號 ``` ，中間打上程式碼\n\n分隔線\n***\n\n換行&lt;br&gt;\n\n粗體字和斜體字斜體字\n粗體字\n*斜體字***粗體字**\n\n強調文字上底色 文字\n`文字`\n\n項目符號\n第一項\n第二項\n第三項\n\n*   第一項*   第二項*   第三項\n\nnote 解釋有 info | primary | success | warning | danger 可以選擇\ninfo note …\n\n\nprimary note …\n\n\nsuccess note …\n\n\nwarning note …\n\n\ndanger note …\n\n\n\n\n&#123;% note danger %&#125; danger note ...&#123;% endnote %&#125;\n","categories":["其他"]},{"title":"jQuery 常用屬性效果總覽","url":"/2023/04/10/20230410-1940/","content":"外層一定要有\n$(document).ready(function()&#123;  &#125;);\n\n\n\n選擇器 Selectors以下舉例選擇器的用法\nHTML 標籤直接寫就可以了\n$(&#x27;h1&#x27;).hide();\n\nCLASS前面加個 .\n$(&#x27;.box&#x27;).hide();\n\nID前面加上 #\n$(&#x27;#home&#x27;).hide();\n\n\n\n屬性 Attributes、CSS.addClass() 增加class(原本沒有class)\n.removeClass() 移除class(原本有class)\n.toggleClass() 切換class\n\n\n\n\n\n\n\n\n\n\n\n.css() 動態載入CSS\n\n\n\n\n\n\n\n\n\n\n\n.attr() 動態修改html裡面的屬性\n//改說明文字$(&#x27;.box&#x27;).attr(&#x27;title&#x27;, &#x27;cake&#x27;);\n\n//改連結$(&#x27;a&#x27;).attr(&#x27;href&#x27;, &#x27;http://google.com.tw&#x27;);\n\n//圖片改寬度$(&#x27;img&#x27;).attr(&#x27;width&#x27;, &#x27;50px&#x27;);\n\n\n\n\n\n\n\n\n\n\n\n\n操控 Manipulation.html() 動態載入html\n.text() 動態載入text文字內容\n.remove() 移除\n\n\n\n\n\n\n\n\n\n\n\n篩選 Traversal.parent() 父元素\n.siblings() 同層其他元素\n.find() 找到裡面的元素\n\n\n動作 Events.click() 點擊時\n.on() 監聽，會去尋找範圍中的\nevent.preventDefault() 取消預設行為\n\n\n\n\n\n\n原本的連結是點了會跳到別的網頁，使用這個在點連結時就不會有反應\n只是單純要觸發 jquery，而不是要連到其他地方\n\n\n效果 Effects.show() 顯示\n.hide() 隱藏\n.toggle() 顯示&#x2F;隱藏\n\n\n\n\n\n\n\n\n\n\n\n.slideUp() 上滑\n.slideDown() 下滑\n.slideToggle() 上滑&#x2F;下滑\n( ) 裡面可以填秒數，就是滑動的速度\n\n\n\n\n\n\n\n\n\n\n\n.fadeIn() 淡入\n.fadeOut() 淡出\n.fadeToggle() 淡入&#x2F;淡出\n\n\n\n\n\n\n\n\n\n\n\n.delay() 延遲效果(讓效果不會同時發生)\n\n\n\n\n\n\n\n\n\n\n\n.stop() 直接中斷目前效果，去跑下一個效果\n\n\n\n\n\n\n\n\n\n\n\n.animate() 滑動到指定的位置\n//animate可以滑動到指定的位置，scrollTop為0是最上面，1000是速度$(&#x27;html,body&#x27;).animate(&#123;  scrollTop: 0  &#125;, 1000);\n\njQuery 辭典裡面有詳細的介紹\njQuery 辭典\n","categories":["jQuery"],"tags":["jQuery","選擇器","屬性"]},{"title":"用 jQuery 來製作下拉式收闔選單","url":"/2023/04/18/20230418-1349/","content":"一般網頁常見的下拉式收闔選單\n有一種是點了會展開選單，再點會收闔起來\n另一種是滑鼠移過去就會展開，移走就收闔起來\n這裡會使用 jQuery 來製作第一種點擊的版本\n\n\n點產品專區會有輕食、甜點、咖啡的選單出現\n再點一次產品專區會收闔起來\n\n\n\n\n\n\nHTML 部分\n首先在產品專區的這個 li 中再加入一組輕食、甜點、咖啡的 ul 和 li\n在這組 ul 設定 dropdown-open 的 class\n接著在產品專區的 a 連結中設定一個叫 dropdown 的 class\n\n\n&lt;li&gt;  &lt;a href=&quot;#&quot; class=&quot;dropdown&quot;&gt;產品專區&lt;/a&gt;    &lt;ul class=&quot;dropdown-open&quot;&gt;      &lt;li&gt;&lt;a href=&quot;#&quot;&gt;輕食&lt;/a&gt;&lt;/li&gt;      &lt;li&gt;&lt;a href=&quot;#&quot;&gt;甜點&lt;/a&gt;&lt;/li&gt;      &lt;li&gt;&lt;a href=&quot;#&quot;&gt;咖啡&lt;/a&gt;&lt;/li&gt;    &lt;/ul&gt;  &lt;/li&gt;&lt;li&gt;\n\n\n\n然後是 CSS 部分\n設定首頁、產品專區、常見問題的 hover 和 active 樣式\n.menu a:hover,.menu a.active&#123;  background: #984B4B;\tcolor: #fff;&#125;\n\n\n\n然後要把輕食、甜點、咖啡的 ul 先隱藏起來\n.menu ul&#123;  display: none;&#125;\n\n\n\n最後是 jQuery 的部分\n先用 preventDefault 讓連結不會連到其他地方\n然後用 toggleClass 增加產品專區的 active 的樣式\n最後是用 slideToggle 來使下拉選單下滑&#x2F;上滑\n$(document).ready(function() &#123;    //點產品專區的連結不會連去其他地方    $(&#x27;.dropdown&#x27;).click(function (e) &#123;         event.preventDefault();    //點產品專區會變底色和字色    $(&#x27;.dropdown&#x27;).toggleClass(&#x27;active&#x27;);        //點產品專區會有下選單    $(&#x27;.dropdown-open&#x27;).slideToggle();    &#125;);  &#125;);\n","categories":["jQuery"],"tags":["下拉式選單","dropdown"]},{"title":"使用 CSS 來製作下拉式收闔選單","url":"/2023/04/21/20230421-0955/","content":"一般網頁常見的下拉式收闔選單\n有一種是點了會展開選單，再點會收闔起來\n另一種是滑鼠移過去就會展開，移走就收闔起來\n這裡會使用 CSS 來製作第二種滑鼠移過去的版本\n\n\n二層選單滑鼠移到關於我們和產品專區時，會有下拉選單出現\n\n\n\n\n\n\n\n主要是先把下拉選單隱藏起來，把 ul 先 display: none\n等到滑鼠 hover 時再出現\n滑鼠移到 menu 裡的 li 時，就把 ul 打開顯示出來\n.menu&gt;li:hover ul&#123;\tdisplay: block;&#125;\n\n\n\n三層選單滑鼠移到關於我們時，會有歷史發展和得獎紀錄\n滑鼠再移到得獎紀錄時，又會再有年份的下拉選單\n\n\n\n\n\n做法和前面的差不多\n比較不一樣的地方是滑鼠移到 menu 的 li 時，就把裡面的 ul 打開顯示出來\n.menu li:hover &gt; ul &#123;  display: block;&#125;\n\n年份的這層選單也要設定一下位置，才不會接在原本選單下面出現\n.menu ul ul &#123;  top: 0px;  left: 100%;&#125;\n","categories":["CSS"],"tags":["下拉式選單","dropdown"]},{"title":"jQuery - 操作本身元素的 this","url":"/2023/06/02/20230602-0705/","content":"this 可以操作本身元素，讓指定到的那個產生效果而已\n\n\n像是這個範例中\n只有點下去的那個會變色，其他的不會跟著變色\n\n\n\n\n\n\n\n\n在 CSS 先設定 active 的樣式(就是被點到的會變的樣式)\n這裡是把背景變紫色、字變白色\n.menu li.active&#123;  background: #D2A2CC;  color: #fff;&#125;\n\n\n\njQuery 則是設定在 menu li 被點到時\nthis (被點到的那一個 li) 會切換 (toggleClass) active 樣式 \n$(&#x27;.menu li&#x27;).click(function(event) &#123;    $(this).toggleClass(&#x27;active&#x27;);  &#125;);\n\n\n\n所以點 li 時，會套用 active 樣式\n再點同一個 li 時，則會移除 active 樣式\n","categories":["jQuery"],"tags":["this","指定元素"]},{"title":"jQuery - 找到父階層元素的 parent()","url":"/2023/06/03/20230603-1627/","content":"parent() 可以找到父階層的元素，讓指定到的那個元素的父元素產生效果\n\n\n像是這個購物車\n點擊加入購物車按鈕時\n會是那個欄位的 li 變顏色，而不是按鈕本身變顏色\n\n\n\n\n\n\n\n\nCSS 設定 li 在 active 時的變色\n背景變紫色、字變白色\n.cart li.active&#123;  background: #C07AB8;  color: #fff;&#125;\n\n\n\njQuery 部分則是當 addCart 被點擊時\nthis 的父元素會切換 active 的 class\n$(&#x27;.addCart&#x27;).click(function(event) &#123;  $(this).parent().toggleClass(&#x27;active&#x27;);&#125;);\n\n因此點擊時會加上 class ，再次點擊會移除 class\n","categories":["jQuery"],"tags":["jQuery","加入購物車","find()"]},{"title":"jQuery - 指定同層元素的 siblings()","url":"/2023/06/07/20230607-1939/","content":"siblings() 可以指定同層元素\n讓指定到的那個元素產生效果，而其他元素是另一個效果\n\n\n下面這組選單，每次點擊時只會亮一個選單\n點了選單1時，選單1會變色\n再點選單2時，選單2會變色，選單1會恢復原狀\n一次只會有一個變色而已\n\n\n\n\n\n\n\n\nCSS 有設定 li 在 active 時的變色\n.menu li.active&#123;  background: orange;  color: #fff;&#125;\n\n\n\njQuery 部分則是當 li 被點擊時\nthis 指定自己本身\naddClass(&#39;active&#39;) 加上 active 的 class\nsiblings() 自己以外的其他同層\nremoveClass(&#39;active&#39;) 則移除 active 的 class\n$(&#x27;.menu li&#x27;).click(function(event) &#123;  $(this).addClass(&#x27;active&#x27;).siblings().removeClass(&#x27;active&#x27;);&#125;);\n\n\n\n最後的移除 class 也可以改成其他的\n像是用 addClass 之類的\n就會變成指定到的那個是一個效果，其他同層的是另一個效果\n","categories":["jQuery"],"tags":["單選"]},{"title":"jQuery - 找到子元素的 find()","url":"/2023/06/09/20230609-2121/","content":"find() 可以找到子元素的內容，讓子元素產生效果\n\n\n下面這個麵包列表點選 li 時，標題會變顏色\n\n\n\n\n\n\n\n\nhtml 的結構是\n&lt;div class=&quot;product&quot;&gt;  &lt;ul&gt;    &lt;li&gt;      &lt;h3&gt;菠蘿麵包&lt;/h3&gt;    &lt;/li&gt;  &lt;/ul&gt;&lt;/div&gt;\n\n然後再搭配 jQuery 的部分一起看\n$(&#x27;.product li&#x27;).click(function(event) &#123;    $(this).find(&#x27;h3&#x27;).toggleClass(&#x27;active&#x27;);  &#125;);\n\n點擊 product 裡的 li 時\nthis (也就是點到的那個 li) 會去尋找子層(也就是 h3)\n然後增加或移除 active 的 class\n","categories":["jQuery"],"tags":["選單","parent()"]},{"title":"設計一個 QA 摺疊選單","url":"/2023/06/13/20230613-1141/","content":"常見的 QA 摺疊選單\n其實搭配 jQuery 就可以做出來\n\n\n\n\n\n\n\n\n首先是 html 的結構\n&lt;div class=&quot;question&quot;&gt;  &lt;h4&gt;1. 目前提供哪些付款方式？&lt;/h4&gt;  &lt;p&gt;信用卡、線上轉帳及超商取貨付款。&lt;/p&gt;&lt;/div&gt;\n\n每個 QA 裡面是 h4 問題 和 p 回答\n\n\nCSS 則是設定 h4 問題的 active 樣式\n以及先把 p 回答隱藏起來\n.question h4.active&#123;  background: #9999CC;  color: #fff;&#125;.question p&#123;  display: none;&#125;\n\n\n\njQuery 的部分拆解來說明\n$(&#x27;.question h4&#x27;).click(function(event) &#123;    //讓點擊到的h4變藍色  $(this).toggleClass(&#x27;active&#x27;);  //讓點擊到的h4找到父元素question，再找到裡面的p判斷收闔  $(this).parent().find(&#x27;p&#x27;).slideToggle();  //自己以外的p隱藏起來  $(this).parent().siblings().find(&#x27;p&#x27;).slideUp();  //自己以外的h4移除active樣式  $(this).parent().siblings().find(&#x27;h4&#x27;).removeClass();&#125;);\n\n\n\n如果點了一個問題再點下一個問題時不想收闔\n只要把上面的這行刪除就可以了\n$(this).parent().siblings().find(&#x27;p&#x27;).slideUp();\n\n這樣只要是點過的問題就都會維持展開\n要再點一次同個問題才會收闔起來\n","categories":["jQuery"],"tags":["Q&A","問答選單"]},{"title":"二層式的摺疊選單設計","url":"/2023/06/16/20230616-1259/","content":"這裡要來做二層式的摺疊選單\n就是選單裡面還有一層選單的選單\n\n\n\n\n\n\n\n\nhtml 結構部分\n&lt;ul&gt;  &lt;li class=&quot;list&quot;&gt;    &lt;a href=&quot;#&quot;&gt;選單1&lt;/a&gt;    &lt;ul&gt;      &lt;li&gt;&lt;a href=&quot;#&quot;&gt;選單1-1&lt;/a&gt;&lt;/li&gt;      &lt;li&gt;&lt;a href=&quot;#&quot;&gt;選單1-2&lt;/a&gt;&lt;/li&gt;      &lt;li&gt;&lt;a href=&quot;#&quot;&gt;選單1-3&lt;/a&gt;&lt;/li&gt;    &lt;/ul&gt;  &lt;/li&gt;&lt;/ul&gt;\n\n選單1裡面還有一層選單1-1、選單1-2和選單1-3\n\n\nCSS 則是設定選單1的 active 樣式\n.list &gt; a.active &#123;  background: #AD5A5A;  color: #fff;&#125;\n\n\n\n然後也把內層的選單1-1、選單1-2 和選單1-3 先隱藏起來\n.list ul &#123;  display: none;&#125;\n\n\n\njQuery 的部分\n.list &gt; a 指的是要點到選單1 2 3 才會有動作\n如果是 .list a 就會變成連內層選單1-1、選單1-2和選單1-3 也會有動作\nevent.preventDefault(); 是取消連結預設的行為\n$(&#x27;.list &gt; a&#x27;).click(function(event) &#123;  event.preventDefault();  //this以外的都隱藏起來 - this是a，父元素是li，同層其他li中找ul，進行slideUp  $(this).parent().siblings().find(&#x27;ul&#x27;).slideUp();  //我自己的ul做摺疊效果 - this是a，父元素是li中找ul，進行slideToggle  $(this).parent().find(&#x27;ul&#x27;).slideToggle();  //點擊到的a變色  $(this).toggleClass(&#x27;active&#x27;);  //自己以外的a移除active樣式  $(this).parent().siblings().find(&#x27;a&#x27;).removeClass();&#125;);\n","categories":["jQuery"],"tags":["摺疊選單","二階層","多層"]},{"title":"jQuery - 動態載入的 html() 和 text()","url":"/2023/06/20/20230620-1556/","content":"html() 可以動態載入 html 標籤\ntext() 可以動態載入文字內容\n\n\n\n\n\n\n\n\nhtml()像是這個 box1 裡面什麼也沒有\n&lt;div class=&quot;box1&quot;&gt;&lt;/div&gt;\n\n\n\n但是在 jQuery 使用 html() 可以直接加入一個 html 標籤\n$(&#x27;.box1&#x27;).html(&#x27;&lt;p&gt;我在html插入了文字&lt;/p&gt;&#x27;);\n\n因此網頁內容就會顯示這個 &lt;p&gt; 標籤\n\n\ntext()另外這個 box2 裡面的 &lt;h2&gt; 標籤沒有寫任何內容\n&lt;div class=&quot;box2&quot;&gt;  &lt;h2&gt;&lt;/h2&gt;&lt;/div&gt;\n\n\n\n在 jQuery 使用 text() 可以加入文字內容\n$(&#x27;.box2 h2&#x27;).text(&#x27;我寫了一些text在這裡&#x27;);\n\n因此網頁中的 &lt;h2&gt; 標籤 就會出現這些文字\n","categories":["jQuery"],"tags":["動態載入"]},{"title":"jQuery - click() 和 on()","url":"/2023/06/23/20230623-2106/","content":"click() 和 on() 這兩個有點像，但其實不太一樣\n像是在使用 html() 時的順序會有差別\n\n\n因為 jQuery 跑程式時是從第一行開始往下跑\n\n\n所以如果是用 click() 搭配動態載入 html 的方式\n就必須把動態載入 html 放前面，這樣才會有效果\n\n\n所以如果不想管順序的問題\n就可以使用 on()，就是有點類似監聽的效果\n這樣不管先後順序如何都會有效果\n像這個就是用 on() ，兩個點了都會跳出 成功！\n\n\n\n\n\n\n\n\n在 wrap 的範圍中，使用 on() 這個動作\n在 click 點擊時，裡面所有的 &lt;h6&gt; 標籤都會有 alert 效果\n$(&#x27;.wrap&#x27;).on(&#x27;click&#x27;, &#x27;h6&#x27;, function(event) &#123;    event.preventDefault();    alert(&#x27;成功！&#x27;);  &#125;); \n\n就像是監聽了裡面所有的 &lt;h6&gt; 標籤一樣\n","categories":["jQuery"],"tags":["jQuery"]},{"title":"一鍵回到網頁最上方的 Go To Top 效果","url":"/2023/06/28/20230628-2208/","content":"網頁的右下角常常都會有個 Go To Top 按鈕\n只要按一下就會回到網頁的最上方\n\n\n\n\n\n\n\n\nhtml 裡面放了一個fontawesome的箭頭圖示\n&lt;div class=&quot;top&quot;&gt;  &lt;a href=&quot;#&quot;&gt;&lt;i class=&quot;fa-solid fa-circle-up arrow&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/div&gt;\n\n\n\nCSS 部分則是把這個 div 固定在右下角\n然後一開始是隱藏的\n也改了一下這個圖示的樣式\n.top &#123;  position: fixed;  bottom: 0;  right: 0;&#125;.top a &#123;  display: none;&#125;.arrow &#123;  color: #FFAAD5;  background: #fff;  border-radius: 50%;  font-size: 40px;  margin: 6px;&#125;\n\n\n\njQuery 的部分分成兩個\n第一個是點圖示會回到網頁最上面\n第二個是一開始不要出現圖示，滑鼠滑到一個位置時才出現\n\n\n先說明第一個\nclick 點了這個圖示的動作\nevent.preventDefault() 取消連結的預設效果\nanimate 可以滑動到指定的位置\nscrollTop 為 0 是最上面\n1000 是速度，1 秒的意思\n$(&#x27;.top a&#x27;).click(function(event) &#123;  event.preventDefault();  $(&#x27;html,body&#x27;).animate(&#123;    scrollTop: 0  &#125;, 1000);&#125;);\n\n\n\n接著是第二個\n滑到大於80的位置時才會出現\n其他時候會隱藏起來\n$(window).scroll(function() &#123;  if ( $(this).scrollTop() &gt; 80)&#123;    $(&#x27;.top a&#x27;).show();  &#125; else &#123;    $(&#x27;.top a&#x27;).hide();    &#125;&#125;);\n\n\n\nreference\n\nBlogger技術】jQuery GoTop 按鈕讓網頁快速回到最上方\n\n","categories":["jQuery"],"tags":["top","GoTop","回到頂端"]},{"title":"宣告 let、const、var","url":"/2023/07/01/20230701-1145/","content":"未宣告的變數會變成全域 (window) 屬性，這樣別的函式也能呼叫它\n會造成全域環境的作用域汙染，之後除錯會變得很困難\n\n\n宣告的變數會被限制它的作用域\n宣告的方法有 let 、 const 和 var\n\n\n作用域因宣告的語法而有不同\nvar 為函式作用域(function scope)\nlet 、 const 的作用域為區塊作用域(block scope)\n這三個有點像又有點不太一樣，差異點分別來說明\n\n\nvar用 var 宣告過的變數可以修改\n不過現在已經不太建議使用了\n因為用 var 宣告的變數會變成全域變數，會影響其他的程式碼\n\n\nlet用 let 宣告過的變數可以修改\n像是 let a = 1; 之後要改成 a = 2; 也是可以的\nlet 可以修改既有的 Value 的值\n用 let 宣告變數會採用區塊作用域來避免產生全域變數\n\n\nconst用法和 let 差不多\n只是 const 在單純的基本型別比較難被修改\n像是 const a = 1; 之後要改成 a = 2; 就沒辦法了\n所以一些比較不會更動到的東西，就可以用 const\n\n\n宣告變數的注意事項\n開頭不能是數字\n\n大小寫是不一樣的\n\n\n像是 appleNum 和 applenum 是不一樣的兩個變數\n\n關鍵字(保留字)不能當變數名稱 &#x3D;&gt; 詳細介紹\n\n像是 if for true 之類的\n\n\n最後來練習一下變數宣告\n\n\n\n\n\n\n\n\n結果會出現\n“我去超級大市場買東西，買了20元的胡蘿蔔共2個，還買了25元的馬鈴薯共3個，總共花了115元。”\n","categories":["JavaScript"],"tags":["let","const","var"]},{"title":"用 lightbox 來製作圖片燈箱效果","url":"/2023/07/05/20230705-2001/","content":"lightbox 是一個很方便的 jQuery 套件\n分成單張和多張的方式\n單張就是每張圖片要分開點\n看完一張要看下一張時要先關掉這張圖片再點下一張\n而多張是點了一張圖片後，會有左右的箭頭可以直接點到下一張或前一張圖片\n做出來的效果像這樣 ↓\n\n\n\n\n\n\n\n\n首先是要載入檔案\nCSS 要放在 &lt;head&gt; 最前面\n&lt;link href=&quot;path/to/lightbox.css&quot; rel=&quot;stylesheet&quot; /&gt;\n\n然後 Javascript 要放在 &lt;/body&gt; 結尾前面\n&lt;script src=&quot;path/to/lightbox.js&quot;&gt;&lt;/script&gt;\n\n\n\n然後是 html 部分\n單張和多張主要就是差在 data-lightbox 的設定\n這個名稱可以自訂，同一個名稱就會是一個圖片群組，就可以左右切換\n&lt;div&gt;    &lt;h3&gt;單張 lightbox&lt;/h3&gt;      &lt;a class=&quot;example-image-link&quot; href=&quot;圖片1網址&quot; data-lightbox=&quot;example-1&quot;&gt;        &lt;img class=&quot;example-image&quot; src=&quot;圖片1網址&quot; alt=&quot;photo-1&quot;&gt;      &lt;/a&gt;      &lt;a class=&quot;example-image-link&quot; href=&quot;圖片2網址&quot; data-lightbox=&quot;example-2&quot;&gt;        &lt;img class=&quot;example-image&quot; src=&quot;圖片2網址&quot; alt=&quot;photo-2&quot;&gt;      &lt;/a&gt;  &lt;/div&gt;\n\n上面的 data-lightbox 一個是example-1，一個是example-2，就會是單張的形式\n如果兩個都設定成example-1，就變成多張可切換了\n\n\nCSS 則單純是改成自己要的樣式\n像我有把圖片改成圓角\n\n\njQuery 的部分在lightbox 網站上有說明\n這裡挑幾個來介紹一下\n\n\nfadeDuration 開啟關閉圖片時的淡入淡出效果，預設是 600 就是 0.6 秒\nresizeDuration 是圖片轉場的秒數，預設是 700 就是 0.7 秒\nwrapAround 預設是 false 圖片不循環， true 是圖片可以循環(最後一張可以再點到第一張)\nshowImageNumberLabel 是群組圖片下方的說明，預設是 true\nalbumLabel 群組圖片下方的說明，預設是 &quot;Image %1 of %2&quot;\n","categories":["jQuery"],"tags":["jQuery","燈箱"]},{"title":"變數","url":"/2023/07/14/20230714-1737/","content":"變數(Variable)和值(Value)像是這裡寫\nlet a = 1;\n\na 就是變數，而 1 就是值\n\n\n基本型別(primitives types)如果要查型別，可以用 typeof (後面放上要查的東西)\n像是 typeof 1 就會出現 ‘number’\n\n\n數字 (Number) 型別就是數字，像是 1 2 3 之類的\n數字可以拿來計算\n\n如果沒有()就是先乘除後加減\n\nNumber 型別可以為負數\n\nNumber 型別可以有小數點\n\n\n常用的方法有下面這些\n+ 加 2+3&#x3D;5\n- 減 3-1&#x3D;2\n* 乘 2*3&#x3D;6\n/ 除 6&#x2F;2&#x3D;3\n% 取餘數 20%3&#x3D;2\n** 次方  22&#x3D;2*2&#x3D;4   23&#x3D;222&#x3D;8\n\n\n練習一下變數和數字：小明去買蘋果，小明的錢包有200元，蘋果一顆30元，他買了6顆，付完錢還剩下多少錢？\n\nlet wallet &#x3D; 200;let applePrice &#x3D; 30;let appleNum &#x3D; 6;let total &#x3D; wallet - applePrice * appleNum;最後輸入 total 就會出現剩下 20 元了\n\n\n\n\n字串 (String) 型別用 “” 或 ‘’ 包起來\n像是 “你好”\n\n\n布林 (Boolean) 型別true false\n\n\n未定義 (undefined)有變數名稱，但是還沒被賦予任何值\n預設就會是 undefined\n\n\n空值 (null)\n\nSymbol\n\n另外還有物件型別，例如陣列(array)與物件(object)\n","categories":["JavaScript"]},{"title":"CSS 的 Media Query 斷點","url":"/2023/07/26/20230726-1929/","content":"@media 來設定要套用的斷點大小\n\n\nmax-width，代表這個大小的螢幕解析度以下（包含） 都適用\nmax-width: 768px 就表示在 768px 以下時會套用樣式\n例如下面這個就是螢幕大小在768px 以下時，h1的文字顏色會變成紅色\n@media (max-width: 768px) &#123;  h1 &#123;    color: red;  &#125;&#125; \n\n\n\n而 min-width，代表這個大小的螢幕解析度以上（包含） 都適用\nmin-width: 375px 就表示在 375px 以上時會套用樣式\n例如下面這個就是螢幕大小在375px 以上時，h2的文字大小會變成20px\n@media (min-width: 375px) &#123;  h2 &#123;    font-size: 20px;  &#125;&#125; \n","categories":["CSS"],"tags":["斷點"]},{"title":"三欄的響應式設計版型","url":"/2023/07/31/20230731-2009/","content":"這種是三欄的響應式版型\n內容的寬度會隨著視窗的大小變化\n768px 以上時是三欄，小於 768px 就變成二欄\n再小於 569px 時變成一欄\n\n\n\n\n\n\n\n\n裡面的寬度是用 % 來設定的\n這樣就會隨著視窗大小等比例的變化了\n","categories":["CSS"],"tags":["流體式設計","三欄式","RWD"]},{"title":"一欄固定，另一欄響應式版型設計","url":"/2023/08/04/20230804-1825/","content":"這種是二欄的響應式版型設計\n左側的選單式固定的尺寸，右側的內容寬度則會隨著視窗的大小變化\n769px 以上時是二欄，小於 768px 就變成單欄了\n\n\n\n\n\n\n\n\n左側選單是固定的大小\n並且使用 float: left 讓它在網頁左邊\n.menu &#123;  width: 110px;  float: left;&#125;\n\n\n\n右側的內容是使用 margin-left 讓它往右邊移動左側選單的寬度\n.content &#123;  margin-left: 110px;&#125;\n\n這樣電腦版的版面就完成了\n\n\n接著是 768px 以下的版面\n先把 float 取消，然後寬度設定占滿整個空間\n.menu &#123;  float: none;  width: 100%;  &#125;\n\n\n\n右側內容的部分也把剛剛的位移給移回去\n.content &#123;  margin-left: 0px;&#125;\n\n這樣就完成這個版面的設計了\n\n\n如果選單是要在右邊，內容要在左邊\n就把剛剛的 float: left 改成 &#96;float: right \n然後內容也更著改成往另一邊位移就可以了\n","categories":["CSS"],"tags":["流體式設計","RWD","二欄式"]},{"title":"三條線的漢堡選單設計","url":"/2023/08/07/20230807-1910/","content":"漢堡選單就是在行動版時會有三條線長得很像漢堡的選單\n像是這樣 ↓\n\n\n\n\n\n\n\n\nhtml 除了原本的選單外，再加入一個漢堡圖示的 a 連結\n&lt;a href=&quot;#&quot; class=&quot;showmenu&quot;&gt;&lt;i class=&quot;fa-solid fa-bars bars&quot;&gt;\n\n這裡的圖示是用 Font Awesome\n在 html 中是加入了三條線的圖示\n但是一開始先隱藏起來(行動版時才會出現)\n.showmenu &#123;  display: none;&#125;\n\n\n\nCSS 部分則是先設計PC版的樣式\n用 float 讓選單變成靠右橫排\n.menu &#123;  float: right;&#125;.menu li &#123;  float: left;&#125;\n\n\n\n接著設定行動版的樣式\n.menu&#123;  max-height: 0px; /* 隱藏選單不要打開 */  overflow: hidden; /* 隱藏選單 */  position: absolute; /* 絕對定位疊在網頁上 */  z-index: 100;  top: 60px; /* 因為 header 60px，所以要往下 60px，選單一才不會被擋住 */  left: 0; /* 左右延伸 */  right: 0;  &#125;\n\n\n\n.menu li&#123;  float: none; /* 把原本的 float 效果取消*/&#125;\n\n\n\n.menu-show .menu&#123;  max-height: 400px; /* 設定選單打開後的高度 */&#125;\n\n\n\njQuery 的部分分成兩個，這兩個都是行動版時會用到的\n第一個是點了漢堡圖示後，會切換 menu 的高度變 400px 或 0px\n這樣就可以打開或關起選單\n$(&#x27;.showmenu&#x27;).on(&#x27;click&#x27;, function (e) &#123;  e.preventDefault();  $(&#x27;body&#x27;).toggleClass(&#x27;menu-show&#x27;);&#125;); \n\n\n\n這一個是點了漢堡圖示後，會切換成叉叉圖示\ntoggleClass 裡面放的是 Font Awesome 的叉叉圖示 class 名稱\n這樣就可以切換漢堡和叉叉這兩個圖示了\n$(&#x27;.showmenu&#x27;).on(&#x27;click&#x27;, function(event) &#123;  event.preventDefault();  $(&#x27;.showmenu i&#x27;).toggleClass(&#x27;fa-xmark&#x27;);&#125;);\n","categories":["CSS"],"tags":["jQuery"]},{"title":"用 parallax.js 來製作視差滾動特效","url":"/2023/08/11/20230811-1018/","content":"視差效果是利用各種元素間不同的移動速度造成的\n使用 parallax.js 就可以很簡單的做出視差滾動的特效\n像是下面這個，滑鼠在滑動時，會覺得背景圖也跟著一起動\n\n\n\n\n\n\n\n\n首先要載入 jQuery 和 parallax.min.js\n然後在 HTML 中在要製作特效的地方加入 data-parallax=&quot;scroll&quot; \n圖片則使用 data-image-src=&quot;圖片網址&quot; 來加入圖片\n圖片顯示的位置預設是 center center 要改變可以用 data-position=&quot;top&quot; 或其他方向位置\ndata-bleed=&quot;10&quot; 可以讓畫面不要有卡卡的感覺，預設是 0\n","categories":["jQuery"],"tags":["jQuery","parallax","Scrolling"]},{"title":"把選單列固定在網頁最上方","url":"/2023/08/25/20230825-1126/","content":"有些時候會希望不管滑鼠滑到哪裡，選單一直都會在網頁的最上方\n這個時候就可以用到這個語法 position: fixed\n把這個加到選單的 CSS 中就可以了\n\n\n不過可能會有下面的內容被擋住的情形\n這個時候在內容區塊加上 padding-top ，讓內容區往下推就不會被擋住了\n\n\n\n\n\n\n\n","categories":["CSS"],"tags":["position","fixed"]},{"title":"運算子","url":"/2023/08/20/20230820-1842/","content":"運算子像是 +-*/ 之類的\n前後方的數字則為運算元\n像是 1+2 中間的 + 就是運算子，1 2 則是運算元\n賦值運算子+=\n假設\nlet a = 10;  定義變數 a 為 10\na = a + 5;  定義一個新的變數 a 為原本的 a 加上 5 ，也就是 a &#x3D; 10 + 5\nconsole.log(a);  結果會顯示 15\n第二行的 a = a + 5; 其實也可以寫成 a += 5\n\n\n-=\n另外減法也是一樣\n假設\nlet b = 20;  定義變數 b 為 20\nb = b - 5;  定義一個新的變數 b 為原本的 b 減掉 5 ，也就是 b &#x3D; 20 - 5\nconsole.log(b);  結果會顯示 15\n這裡第二行的 b = b - 5; 其實也可以寫成 b -= 5\n\n\n乘法和除法也是可以用這個方法\n就變成 c *= 5 和 d /= 5\n\n\n算術運算子++\n假設\nlet a = 3;\na++; \nconsole.log(a);  結果會顯示 4\n也就是 a = a + 1\n如果再一個 a++;\nconsole.log(a);  結果會顯示 5\na++; 會以加 1 的方式加下去\n\n\n--\n所以減法也是一樣\na--; 會以減 1 的方式減下去\n\n\n比較運算子== 等於\n=== 嚴格等於 (型別、內容都要是一樣才可以)\n!= 不等於\n!== 嚴格不等於\n&gt; 大於\n&gt;= 大於或等於\n&lt; 小於\n&lt;= 小於或等於\n\n\n邏輯運算子&amp;&amp; 就是”和”的意思，所有的條件都要成立才行\n|| 就是”或”的意思，只要其中一個條件成立就可以了\n","categories":["JavaScript"]},{"title":"用 AOS 製作視差滾動特效","url":"/2023/09/12/20230912-1911/","content":"這種視差滾動的特效是滑鼠滾到一定的位置後會出現的效果\n用 AOS 可以很容易就做出來了\n\n\n\n\n\n\n\n\n首先是先載入 CSS 和 JS\n&lt;link rel=&quot;stylesheet&quot; href=&quot;https://unpkg.com/aos@next/dist/aos.css&quot; /&gt;\n\n&lt;script src=&quot;https://unpkg.com/aos@next/dist/aos.js&quot;&gt;&lt;/script&gt;&lt;script&gt;  AOS.init();&lt;/script&gt;\n\n\n\n然後就可以選擇想要的動畫效果了\n動畫效果可以分成 fade flip slide zoom 四種\n每一種都還有好幾個不一樣的效果\n像這個範例中的 box1 是用 fade-right 的效果\n就在 box1 的 html 中加入data-aos=&quot;fade-right&quot; 就可以了\n\n\n也可以更改自己想要的效果\n像是 data-aos-duration=&quot;1000&quot; 指的是跑完這個動畫的時間\ndata-aos-offset=&quot;200&quot; 這個是偏移的位置，和原本相比要多移200的距離才會開始跑動畫\ndata-aos-once=&quot;false&quot; 代表滑鼠每次滾過去都會有動畫，true 則是動畫只出現一次\ndata-aos-mirror=&quot;true&quot; 代表滑鼠滾走時也會有動畫，false 則是沒有動畫\ndata-aos-easing 是動畫的進行方向，也有分成超多種\ndata-aos-delay=&quot;300&quot; 動畫延遲0.3秒才開始\n","categories":["JavaScript"],"tags":["Scrolling","滾動視差"]},{"title":"處理字串的常用方法及轉型","url":"/2023/09/18/20230918-1347/","content":"trim() 去除空白可以清除字串兩端的空白\n用法是 a.trim()\nlet price = &quot;  100    &quot;;console.log(price); // &quot;  100     &quot;console.log(price.trim()); // &quot;100&quot;\n\n\n\nconcat() 合併可以把字串連接在一起\n用法是 a.concat(&#39;字串1&#39;,&#39;字串2&#39;...)\nlet today = &quot;今天&quot;;console.log(today.concat(&quot;是&quot;,&quot;星期一&quot;)); // &quot;今天是星期一&quot;\n\n\n\nsplit() 分割可以把字串分割，並用陣列回傳\n用法是 a.split(&quot;&quot;) 或 a.split(&quot; &quot;)\nlet hello = &quot;Hello 你好&quot;;console.log(hello.split(&quot;&quot;)); // [&quot;H&quot;,&quot;e&quot;,&quot;l&quot;,&quot;l&quot;,&quot;o&quot;,&quot; &quot;,&quot;你&quot;,&quot;好&quot;]console.log(hello.split(&quot; &quot;)); // [&quot;Hello&quot;,&quot;你好&quot;]\n\n\n\ntoUpperCase() 將字串轉為大寫可以將字串全部轉成大寫\n用法是a.toUpperCase()\nlet hello = &quot;hello&quot;;console.log(hello.toUpperCase()); // &quot;HELLO&quot;\n\n\n\ntoLowerCase() 將字串轉為小寫可以將字串全部轉成小寫\n用法是a.toLowerCase()\nlet hello = &quot;HELLO&quot;;console.log(hello.toLowerCase()); // &quot;hello&quot;\n\n\n\nparseInt() 字串轉數字可以將字串轉型為數字\n用法是 parseInt(a)\n原本是字串\nlet a = &quot;1&quot;;let b = &quot;2&quot;;let c = a + b;console.log(c, typeof c); //  &quot;12&quot; &quot;string&quot;\n\n用 parseInt() 轉為數字\nlet a = &quot;1&quot;;let b = &quot;2&quot;;a = parseInt(a)b = parseInt(b)let c = a + b;console.log(c, typeof c); // 3 &quot;number&quot;\n\n\n\ntoString() 數字轉字串可以將數字轉型為字串\n用法是 a.toString()\n原本是數字\nlet a = 2;let b = 3;let c = a + b;console.log(c, typeof c); //  5 &quot;number&quot;\n\n用 toString() 轉為字串\nlet a = 2;let b = 3;a = a.toString();b = b.toString();let c = a + b;console.log(c, typeof c); // &quot;23&quot; &quot;string&quot;\n","categories":["JavaScript"],"tags":["字串","數字","轉型"]},{"title":"控制判斷 - if、else if、switch","url":"/2023/10/07/20231007-2155/","content":"ifif (hungry == &#x27;肚子餓&#x27;) &#123;  eat();&#125;\n\nif () 是判斷式\neat(); 是陳述式\n如果判斷式()裡面的內容成立，就會跑&#123;&#125;裡面的內容\n所以這裡就是如果肚子餓，就會執行 eat(); 函式\n\n\nelse if假設飢餓程度為 1一點點餓 ~ 10超級餓\nif (hungry &gt;= 7) &#123;  eat(&#x27;便當&#x27;);&#125; else if (hungry &lt; 7 &amp;&amp; hungry &gt;= 4) &#123;  eat(&#x27;沙拉&#x27;);&#125;\n\n如果飢餓程度大於等於7，那就執行 eat(&#39;便當&#39;);\n前面沒有執行就會繼續跑後面的條件\n如果飢餓程度在4~7之間，那就執行 eat(&#39;沙拉&#39;);\n\n\n如果有多個條件可以多寫 else if\n最後可以寫 else ，如果所有條件都沒有符合，最後一定還是會跑 else 的內容\n\n\nswitch switch (perfer) &#123;  case &#x27;便當&#x27;:    eat(&#x27;便當&#x27;);    break;  case &#x27;拉麵&#x27;:    eat(&#x27;拉麵&#x27;);    break;  default:    eat(&#x27;沙拉&#x27;);    break;&#125;\n\nswitch () 是表達式，裡面包含條件\ncase: 比對資料，如果符合就執行程式碼\nbreak; 放在 case: 後方，讓程式碼不要繼續執行\ndefault: 類似 else 的功能，前面都不符合就執行這一個\n\n\nif 和 switch 的差別if 執行時會全部跑一次，看符合那一個條件再去執行\nswitch 則是先看哪個條件符合，直接執行符合的那一個\n所以 switch 的效能會比較好，但是條件可能也要帶很多個進去設定\n","categories":["JavaScript"],"tags":["if","else if","else","switch"]},{"title":"陣列 (Array) 和物件 (Object)","url":"/2023/10/21/20231021-2030/","content":"陣列 (Array)寫法陣列的寫法\n外面用 [] 包起來，裡面用逗號區隔\nlet array = [&quot;麵包&quot;,&quot;蛋糕&quot;,&quot;餅乾&quot;];\n\n\n\n讀取方法陣列的讀取方法，是從零開始\n所以陣列裡的麵包是第0個，蛋糕是第1個，餅乾是第2個\nlet array = [&quot;麵包&quot;,&quot;蛋糕&quot;,&quot;餅乾&quot;];console.log(array[0]); // &quot;麵包&quot;\n\n\n\n讀取陣列長度要讀取陣列長度可以用 array.length\nlet array = [&quot;麵包&quot;,&quot;蛋糕&quot;,&quot;餅乾&quot;];console.log(array.length); // 3\n\n\n\n新增方法陣列的新增方法有好幾種\n\n用 push 的方法新增\n\nlet array = [&quot;麵包&quot;,&quot;蛋糕&quot;,&quot;餅乾&quot;];array.push(&quot;巧克力&quot;);console.log(array); // [&quot;麵包&quot;,&quot;蛋糕&quot;,&quot;餅乾&quot;,&quot;巧克力&quot;]\n\n\n\n\n指定位置寫入資料\n\nlet array = [&quot;麵包&quot;,&quot;蛋糕&quot;,&quot;餅乾&quot;];array[1] = &quot;巧克力&quot;;console.log(array); //[&quot;麵包&quot;,&quot;巧克力&quot;,&quot;餅乾&quot;]\n\nlet array = [&quot;麵包&quot;,&quot;蛋糕&quot;,&quot;餅乾&quot;];array[3] = &quot;巧克力&quot;;console.log(array); // [&quot;麵包&quot;,&quot;蛋糕&quot;,&quot;餅乾&quot;,&quot;巧克力&quot;]\n\n\n\n\n用 unshift 寫入資料\n\nlet array = [&quot;麵包&quot;,&quot;蛋糕&quot;,&quot;餅乾&quot;];array.unshift(&quot;巧克力&quot;);console.log(array); // [&quot;巧克力&quot;,&quot;麵包&quot;,&quot;蛋糕&quot;,&quot;餅乾&quot;]\n\n\n\n物件 (Object)寫法物件的寫法\n外面用 &#123;&#125; 包起來，裡面每個項目用 : 列出來，項目間用逗號區隔\n前面的項目稱為屬性 (property)，後面的內容稱為值(value)\nlet zoo = &#123;  lion: &#x27;獅子王&#x27;,  tiger: [&#x27;大虎&#x27;, &#x27;小虎&#x27;],  rabbit: 12&#125;\n\n\n\n讀取方法\n通常會用 . 的方式來讀取\n\nlet zoo = &#123;  lion: &#x27;獅子王&#x27;,  tiger: [&#x27;大虎&#x27;, &#x27;小虎&#x27;],  rabbit: 12&#125;console.log(zoo.tiger); // [&quot;大虎&quot;,&quot;小虎&quot;]console.log(zoo.tiger[1]); // &quot;小虎&quot;console.log(zoo.rabbit); // 12\n\n\n\n\n有些時候沒辦法用 . 的方式讀取時，可以使用 [] 的方式來讀取\n\nlet zoo = &#123;  lion: &#x27;獅子王&#x27;,  tiger: [&#x27;大虎&#x27;, &#x27;小虎&#x27;],  rabbit: 12&#125;console.log(zoo[&#x27;tiger&#x27;]); // [&quot;大虎&quot;,&quot;小虎&quot;]console.log(zoo[&#x27;rabbit&#x27;]); // 12\n\n\n\n\n或是要讀取變數時，也可以使用 [] 的方式來讀取\n\nlet zoo = &#123;  lion: &#x27;獅子王&#x27;,  tiger: [&#x27;大虎&#x27;, &#x27;小虎&#x27;],  rabbit: 12&#125;let king = &#x27;lion&#x27;;console.log(zoo[king]); // &quot;獅子王&quot;\n\n\n\n新增方法用 . 的方式來新增，後面用 = 來設定\nlet zoo = &#123;  lion: &#x27;獅子王&#x27;,  tiger: [&#x27;大虎&#x27;, &#x27;小虎&#x27;],  rabbit: 12&#125;zoo.chick = 20;console.log(zoo);\n\n結果會顯示\n&#123;  &quot;lion&quot;: &quot;獅子王&quot;,  &quot;tiger&quot;: [&quot;大虎&quot;, &quot;小虎&quot;],  &quot;rabbit&quot;: 12,  &quot;chick&quot;: 20&#125;\n\n\n\n修改方法也是和新增差不多，直接改值就可以修改\n兔子的數量從原本的 12 改成 20\nlet zoo = &#123;  lion: &#x27;獅子王&#x27;,  tiger: [&#x27;大虎&#x27;, &#x27;小虎&#x27;],  rabbit: 12&#125;zoo.rabbit = 20;console.log(zoo.rabbit); // 20\n\n\n\n直接指定項目修改\n假設原本有大虎和小虎，後來小虎改名為阿虎\nlet zoo = &#123;  lion: &#x27;獅子王&#x27;,  tiger: [&#x27;大虎&#x27;, &#x27;小虎&#x27;],  rabbit: 12&#125;zoo.tiger[1] = &#x27;阿虎&#x27;;console.log(zoo.tiger); // [&quot;大虎&quot;,&quot;阿虎&quot;]\n\n\n\n綜合練習假設開心農場現在舉辦了三個餵食活動，每個活動的名稱、動物、費用為下面這樣\nlet happyFarmaACtivities = [    &#123;        activityName: &quot;羊駝餵食秀&quot;,        animal: &quot;羊駝&quot;,        cost: &quot;50元&quot;    &#125;,    &#123;        activityName: &quot;兔兔吃點心&quot;,        animal: &quot;兔子&quot;,        cost: &quot;免費&quot;    &#125;,    &#123;        activityName: &quot;牛牛餵食體驗&quot;,        animal: &quot;牛&quot;,        cost: &quot;30元&quot;    &#125;];\n\n\n\n(一) 如果要取出 “羊駝餵食秀” \nconsole.log(happyFarmaACtivities[0].activityName); // &quot;羊駝餵食秀&quot;\n\n\n\n(二) 如果要取出 “兔子” \nconsole.log(happyFarmaACtivities[1].animal); // &quot;兔子&quot;\n\n\n\n(三) 如果要取出 “30元” \nconsole.log(happyFarmaACtivities[2].cost); // &quot;30元&quot;\n\n\n\n(四) 如果又有一個免費的 “來餵鴨鴨們吃東西吧” 的餵鴨子活動要加到這個陣列裡面\nlet obj = &#123;&#125;;obj.activityName = &quot;來餵鴨鴨們吃東西吧&quot;;obj.animal = &quot;鴨子&quot;;obj.cost = &quot;免費&quot;;happyFarmaACtivities.push(obj);console.log(happyFarmaACtivities);//結果會顯示[&#123;&quot;activityName&quot;: &quot;羊駝餵食秀&quot;,&quot;animal&quot;: &quot;羊駝&quot;,&quot;cost&quot;: &quot;50元&quot;&#125;,&#123;  &quot;activityName&quot;: &quot;兔兔吃點心&quot;,  &quot;animal&quot;: &quot;兔子&quot;,  &quot;cost&quot;: &quot;免費&quot;&#125;, &#123;  &quot;activityName&quot;: &quot;牛牛餵食體驗&quot;,  &quot;animal&quot;: &quot;牛&quot;,  &quot;cost&quot;: &quot;30元&quot;&#125;,&#123;  &quot;activityName&quot;: &quot;來餵鴨鴨們吃東西吧&quot;,  &quot;animal&quot;: &quot;鴨子&quot;,  &quot;cost&quot;: &quot;免費&quot;&#125;];\n","categories":["JavaScript"],"tags":["陣列","物件","讀取","新增"]},{"title":"用 SASS 來提升寫網頁語法的效率","url":"/2023/09/01/20230901-1011/","content":"寫法SASS 有兩種寫法\n一種是比較常見的 (.scss) ，另一種是用縮排方式的 (.sass)\n\n\n一般的 CSS 寫法是這樣，每一個項目都會通通寫出來\n.header &#123;  height: 50px;&#125;.header ul &#123;  float: right;&#125;.header li &#123;  float: left;&#125;.header li a &#123;  color: #000;&#125;\n\n\n\n(.scss) 的寫法會省略一些重複的東西，但是編譯出來還是會像一般的寫法那樣\n.header &#123;  height: 50px;  ul &#123;    float: right;  &#125;  li &#123;    float: left;    a &#123;      color: #000;    &#125;  &#125;&#125;\n\n\n\n(.sass) 的寫法是用縮排的方式，沒有任何的符號\n.header   height: 50px  ul     float: right  li     float: left    a       color: #000\n\n\n\n$ 變數用一個 $ 符號來設定通用的變數，前面是變數名稱，後面是設定值\n這樣要管理和修改都會方便很多\n$font-m: 16px;$font-l: $font-m *1.2;$font-s: $font-m *0.8;.box &#123;  font: $font-l;&#125;\n\n\n\nimport 切分檔案可以把檔案分成好幾支專門的檔案\n像是 _reset.SCSS 就是專門寫 css reset 的檔案\n_buttons.SCSS 就是專門寫按鈕的檔案之類的\n前面加上 _ 下底線表示不要被編譯成 CSS 檔\n\n\n要用到那支檔案時，就 import 那個檔案\n@import &#x27;reset&#x27;;@import &#x27;buttons&#x27;;\n\n這樣每個專案都可以直接使用，不用每次都重寫了\n\n\nMixin 自定義語法可以將自己常用的語法寫成 @mixin\n需要用到時就使用 include 把它叫出來使用\n寫法像是這樣\n@mixin hide-text &#123;  text-indent: 101%;  overflow: hidden;  white-space: nowrap;&#125;.header a &#123;  background: #000;  @include hide-text;&#125;\n\n\n\n裡面要加入變數也是可以\n@mixin circle($size,$bgcolor) &#123;  border-radius: 50%;  width: $size;  height: $size;  font-size: $size / 3;  background: $bgcolor;&#125;.box &#123;  @include circle(50px, #000)&#125;\n\n\n\nextend 繼承@extend 可以讓多個 class 都使用相同的樣式\n%bg-red &#123;  background: red;  color: #fff;&#125;.box1 &#123;  @extend bg-red;&#125;.box2 &#123;  width: 100px;  height: 100px;  @extend bg-red;&#125;\n\n像這樣編譯出來就會變成\n.box1 &#123;  background: red;  color: #fff;&#125;.box2 &#123;  width: 100px;  height: 100px;  background: red;  color: #fff;&#125;\n\n\n\n常用基本架構\nconfig\n_variables.SCSS\n_reset.SCSS\n_grid.SCSS  斷點\n_typography.SCSS  文字設定\n\nhelper\n_mixin.SCSS\n_state.SCSS\n\nmodule_buttons.SCSS\n_table.SCSS\n_form.SCSS\n\nlayout  \n_header.SCSS\n_footer.SCSS\n\npage\n_index.SCSS\n_page1.SCSS\n_page2.SCSS\n\n\n","categories":["CSS"],"tags":["SASS","SCSS"]},{"title":"撈取 JSON 格式裡的資料","url":"/2023/11/15/20231115-1148/","content":"首先，找一個 JSON 格式的資料\n我找了政府資料開放平台的 國立自然科學博物館特展 的資料\n就用裡面的第一筆資料來練習吧\n\n\n會用到的資料有展覽名稱、地點、和期間\n也就是 title、location 和 dateStart 及 dateEnd\n&#123;  mainImage: &quot;https://www.nmns.edu.tw/export/sites/nmns/.galleries/banner/20231016-1.jpg&quot;,  sessions: [ ],  dateStart: &quot;2023/11/04&quot;,  location: &quot;地球環境廳/1F&quot;,  dateEnd: &quot;2023/12/03&quot;,  title: &quot;吉娃斯勇闖科博館&quot;,  url: &quot;https://www.nmns.edu.tw/ch/exhibitions/special-exhibitions/Exhibition-000485/&quot;  &#125;\n\n\n\n首先在 html 設計好欄位\n&lt;h2 id=&quot;title&quot;&gt;&lt;/h2&gt;&lt;p&gt;&lt;i class=&quot;fa-solid fa-location-dot&quot;&gt;&lt;/i&gt; &lt;span id=&quot;place&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;i class=&quot;fa-solid fa-clock&quot;&gt;&lt;/i&gt; &lt;span id=&quot;date&quot;&gt;&lt;/span&gt;&lt;/p&gt;\n\n\n\njs 的部分則是定義會用到的這三個 id\nconst titleName = document.querySelector(&quot;#title&quot;);const place = document.querySelector(&quot;#place&quot;);const period = document.querySelector(&quot;#date&quot;);\n\n\n\n然後把剛剛的 JSON 資料放進來\nlet itemList = [  &#123;  mainImage: &quot;https://www.nmns.edu.tw/export/sites/nmns/.galleries/banner/20231016-1.jpg&quot;,  sessions: [ ],  dateStart: &quot;2023/11/04&quot;,  location: &quot;地球環境廳/1F&quot;,  dateEnd: &quot;2023/12/03&quot;,  title: &quot;吉娃斯勇闖科博館&quot;,  url: &quot;https://www.nmns.edu.tw/ch/exhibitions/special-exhibitions/Exhibition-000485/&quot;  &#125;];\n\n\n\n接著設定 title 就是 itemList 陣列裡面的第一個物件的 title 的資料\nlocationPlace 就是 itemList 陣列裡面的第一個物件的 location 的資料\ndate 就是 itemList 陣列裡面的第一個物件的 dateStart 及 dateEnd 的資料\nlet title = itemList[0].title;let locationPlace = itemList[0].location;let date = itemList[0].dateStart + &quot; ~ &quot; + itemList[0].dateEnd;\n\n\n\n然後用 textContent 來寫入文字資料\ntitleName.textContent = title;place.textContent = locationPlace;period.textContent = date;\n\n\n\n實際完成的樣子 ↓\n\n\n\n\n\n\n\n","categories":["JavaScript"],"tags":["JSON","textContent"]},{"title":"DOM 網頁元素","url":"/2023/12/05/20231205-2233/","content":"querySelector 選擇單一元素可以選取網頁元素\n\n\n選取 html 元素\nconst el = document.querySelector(&#x27;h1&#x27;);\n\n\n\n選取 class 元素\nconst el = document.querySelector(&#x27;.box&#x27;);\n\n\n\n選取 id 元素\nconst el = document.querySelector(&#x27;#box&#x27;);\n\n\n\n也可以選取節點的內容\n&lt;h1 class=&quot;title&quot;&gt;  &lt;p class=&quot;box&quot;&gt;&lt;/p&gt;&lt;/h1&gt;\n\nconst el = document.querySelector(&#x27;.title .box&#x27;);\n\n\n\nquerySelectorAll 選取多個元素可以一次選取多個元素\n這樣就一次把全部的 p 都選到了\nconst el = document.querySelectorAll(&#x27;.title p&#x27;);\n\n\n\ntextContent 動態修改文字可以動態修改裡面的 text 文字內容\n像這裡就把原本 P 段落裡的 1 2 3，改成 i 和 13579\n&lt;h1 class=&quot;title&quot;&gt;  &lt;p class=&quot;box1&quot;&gt;1&lt;/p&gt;  &lt;p class=&quot;box2&quot;&gt;2&lt;/p&gt;  &lt;p class=&quot;box3&quot;&gt;3&lt;/p&gt;&lt;/h1&gt;\n\nconst el = document.querySelectorAll(&#x27;.title p&#x27;);let elLen = el.length;for (let i=0;i&lt;elLen;i++) &#123;  el[i].textContent = i + &#x27; 13579&#x27;;&#125;\n\n\n\n\n\n\n\n\n\ninnerHTML 增加HTML網頁結構可以增加 HTML 的網頁結構\n組完字串後，用語法渲染到網頁上\n原本的東西會被刪除掉，網頁上會顯示新的內容\n&lt;h1 class=&quot;title&quot;&gt;  &lt;p class=&quot;box1&quot;&gt;1&lt;/p&gt;  &lt;p class=&quot;box2&quot;&gt;2&lt;/p&gt;  &lt;p class=&quot;box3&quot;&gt;3&lt;/p&gt;&lt;/h1&gt;\n\nconst content = document.querySelector(&#x27;.box2&#x27;);content.innerHTML = `&lt;h4 class=&quot;title&quot;&gt;這是內容&lt;/h4&gt;`;const link = document.querySelector(&#x27;.box3&#x27;);let google = &quot;https://www.google.com.tw/&quot;;let linkName = `&lt;p&gt;&lt;a href=&quot;$&#123;google&#125;&quot;&gt;連結&lt;/a&gt;&lt;/p&gt;`link.innerHTML = linkName;\n\n\n\n\n\n\n\n\n\n也可以和 for 搭配使用\n這裡用國立自然科學博物館特展JSON資料來練習\n\n\nul 裡面沒有寫東西\n&lt;ul class=&quot;list&quot;&gt;&lt;/ul&gt;\n\n\n\njs 則是先用 querySelector 選取這個 ul\n然後算出資料的長度\n接著先寫一個空字串，等等組字串時會用到\nconst list = document.querySelector(&quot;.list&quot;);let len = itemList.length;let str = &#x27;&#x27;;\n\n\n\n接下來是跑 for 迴圈，在裡面寫下 li 的內容\n有圖片、展覽名稱、地點和展出的期間，依序放到 li 裡面\n最重要的是 str += content; \n如果沒有這樣寫，innerHTML 每跑一次會蓋掉前面的資料\n最後網頁上只會有最後一筆資料而已\nfor (let i=0;i&lt;len;i++)&#123;  let content = `  &lt;img class=&quot;pic&quot; src=&quot;$&#123;itemList[i].mainImage&#125;&quot; height=&quot;280&quot; alt=&quot;&quot;&gt;  &lt;li&gt;&lt;h2 class=&quot;title&quot;&gt;$&#123;itemList[i].title&#125;&lt;/h2&gt;&lt;/li&gt;  &lt;li&gt;&lt;i class=&quot;fa-solid fa-location-dot&quot;&gt;&lt;/i&gt; &lt;span class=&quot;place&quot;&gt;$&#123;itemList[i].location&#125;&lt;/span&gt;&lt;/li&gt;  &lt;li class=&quot;period&quot;&gt;&lt;i class=&quot;fa-solid fa-clock&quot;&gt;&lt;/i&gt; &lt;span class=&quot;date&quot;&gt;$&#123;itemList[i].dateStart&#125; ~ $&#123;itemList[i].dateEnd&#125;&lt;/span&gt;&lt;/li&gt;  `;  str += content;&#125;\n\n\n\n最後用 innerHTML 渲染到網頁上就完成了\nlist.innerHTML = str;\n\n\n\n\n\n\n\n\n\ncreateElement 增加HTML網頁結構用 DOM 節點的方式來新增\n和 innerHTML 的差別是會保留原本的內容\n新增的東西會依序加在後面\n\n\nHTML 中原本有一個 P段落\n&lt;h1 class=&quot;title&quot;&gt;  &lt;p&gt;23&lt;/p&gt;&lt;/h1&gt;\n\n\n\n用 createElement 增加 HTML 標籤的元素，然後在 JS 中動態增加\n接著用 appendChild 把剛剛的節點掛在 .title 中\n新增的東西會排在原本的往內容的後面\n所以粉紅色的 13579 會在原本網頁內容 123 的後面\nlet el = document.createElement(&#x27;em&#x27;);el.textContent = &#x27;13579&#x27;;el.setAttribute(&#x27;class&#x27;,&#x27;pink&#x27;);document.querySelector(&#x27;.title&#x27;).appendChild(el);\n\n\n\n\n\n\n\n\n\n\n\n也可以和 for 搭配使用\n這裡用國立自然科學博物館特展JSON資料來練習\n\n\nul 裡面沒有寫東西\n&lt;h2&gt;展覽名稱&lt;/h2&gt;&lt;ul class=&quot;list&quot;&gt;  &lt;/ul&gt;\n\n\n\njs 則是先用 querySelector 選取這個 ul\n然後算出資料的長度\nconst list = document.querySelector(&quot;.list&quot;);let len = itemList.length;\n\n\n\n接下來是跑 for 迴圈\n先增加 li 這個元素\n然後新增展覽的標題放到 li 裡面\n接著用 appendChild 在 list 中加入剛剛組好的內容\n每跑一次都會在最後面加上新的內容\nfor (let i=0;i&lt;len;i++)&#123;  let str = document.createElement(&#x27;li&#x27;);  str.textContent = itemList[i].title;  list.appendChild(str);&#125;\n\n\n\n\n\n\n\n\n\nsetAttribute 增加標籤屬性可以設定指定元素上的屬性\n\n\n下面這個的 HTML 上只有連結2個字，點了也沒反應\n透過 querySelector 來設定 href 和 class 屬性\n&lt;h1&gt;  &lt;a href=&quot;#&quot;&gt;連結&lt;/a&gt;&lt;/h1&gt;\n\n先用 querySelector 選取 a 這個元素\nconst link = document.querySelector(&#x27;a&#x27;);//設定 href 屬性link.setAttribute(&quot;href&quot;,&quot;https://getbootstrap.com/&quot;);//設定 class 屬性link.setAttribute(&quot;class&quot;,&quot;pink&quot;);\n\n\n\n\n\n\n\n\n\ngetAttribute 取得標籤屬性可以取出指定元素上的屬性\n\n\n&lt;h1&gt;  &lt;a href=&quot;https://getbootstrap.com/&quot; class=&quot;pink&quot;&gt;連結&lt;/a&gt;&lt;/h1&gt;\n\nconst link = document.querySelector(&#x27;a&#x27;);console.log(link.getAttribute(&quot;href&quot;)); // &quot;https://getbootstrap.com/&quot;console.log(link.getAttribute(&quot;class&quot;)); // &quot;pink&quot;\n\n\n","categories":["JavaScript"]},{"title":"event (事件)","url":"/2023/12/17/20231217-2129/","content":"event 物件可以知道當下的元素資訊\n使用 function(e) 就可以了解這個事件的詳細資訊\n\n\nvalue取值使用 .value 來取出元素，取出來的值為字串\n以 input 欄位說明\n&lt;input type=&quot;text&quot; class=&quot;txt&quot; value=&quot;HELLO&quot;&gt;\n\n結果會顯示 value 的內容\nconst el = document.querySelector(&#x27;.txt&#x27;);console.log(el.value); // &quot;HELLO&quot;\n\n\n\n賦予值延續剛剛的範例，也可以改 value 的內容\nel.value = &quot;今天天氣真好&quot;;\n\n這樣網頁顯示出來的內容就從 HELLO 變成 今天天氣真好\n\n\naddeventListener 事件監聽可以監聽網頁 Event 的事件\n裡面的項目分別是 addEventListener(事件,函式,布林值)\n第一個是選取的事件，像 click 就是點擊時\n中間是匿名 function，也就是要觸發的內容\n最後一個是布林值，決定要不要產生冒泡事件\nfalse 為冒泡事件 (Event Bubbling)，會從指定元素往外找\n當點擊最近元素時，會由最近的元素來觸發事件\ntrue 為捕獲事件 (Event Capturing)，會從最外層找到指定元素\n如果不寫的話，預設是 false\n\n\nclick 點擊事件也就是當滑鼠點擊時，會觸發效果\n像下面的範例那樣\n當點擊那個按鈕時，就會跳出 你剛剛點擊了\n\n\nhtml 先寫一個按鈕\n&lt;input type=&quot;button&quot; class=&quot;btn&quot; value=&quot;點擊&quot;&gt;\n\n用 querySelector 選取剛剛的按鈕\n然後用 addEventListener 來監聽\n當點擊按鈕發生 click 事件時，，就會觸發函式的內容\nconst el = document.querySelector(&#x27;.btn&#x27;);el.addEventListener(&#x27;click&#x27;,function()&#123;  alert(&#x27;你剛剛點擊了&#x27;);&#125;,false);\n\n\n\n\n\n\n\n\n\n剛剛的 JS 也可以直接放入一個函式\nconst el = document.querySelector(&#x27;.btn&#x27;);el.addEventListener(&#x27;click&#x27;, clickBtn);function clickBtn(e)&#123;  alert(&#x27;你剛剛點擊了&#x27;);&#125;;\n\nkeydown 鍵盤事件如果要監聽使用者 keydown 鍵盤事件\n把剛剛的 click 改成 keydown\n這樣當按鍵盤時就會執行函式內容了\n\n\nkeyCode 鍵盤代碼而 keyCode 則是按下鍵盤時的鍵盤代碼\n像空白鍵是 32，enter 則是 13 之類的\n這樣就可以設計當按到什麼鍵盤時會產生什麼效果\n\n\nblur 離開焦點時觸發像是點擊 input 欄位時，就會聚焦在那個欄位\n如果沒填寫內容，使用 blur ，在離開這個焦點時就可以觸發事件\n像是跳出沒填寫內容的提醒之類的\n\n\nmouse 滑鼠滑入觸發使用 mousemove 就可以在滑鼠滑入指定內容時觸發事件\n\n\n\n\n\n\n\n\nstopPropagation 中止冒泡事件在 addEventListener 的 function(e)&#123;&#125; 中加入 e.stopPropagation();\n就可以中止不要再去找其他的監聽事件\n也就是說如果有重疊的行為，只做自己的事件\n\n\npreventDefault 取消預設觸發行為e.preventDefault(); 可以取消元素的默認行為\n原本點連結會跳轉到指定的網頁，用了這個之後，可以取消觸發行為\n\n\ntarget 和 nodeName 了解目前所在元素位置使用 e.target 可以知道目前滑鼠點的地方是哪個 DOM 物件\n而 nodeName 可以知道目前點選的節點名稱\n\n\n&lt;div class=&quot;menu&quot;&gt;  &lt;ul&gt;    &lt;li&gt;&lt;a href=&quot;#&quot;&gt;12345&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;67890&lt;/li&gt;  &lt;/ul&gt;&lt;/div&gt;\n\n當點擊 a 連結時，console.log 會顯示\nconst menu = document.querySelector(&quot;.menu&quot;);menu.addEventListener(&quot;click&quot;, function (e) &#123;  console.log(e.target); // &lt;a href=&quot;#&quot;&gt;12345&lt;/a&gt;  console.log(e.target.nodeName); // &quot;A&quot;&#125;);\n\n當點擊 li 連結時，console.log 會顯示\nconst menu = document.querySelector(&quot;.menu&quot;);menu.addEventListener(&quot;click&quot;, function (e) &#123;  console.log(e.target); // &lt;li&gt;67890&lt;/li&gt;  console.log(e.target.nodeName); // &quot;LI&quot;&#125;);\n\n這樣要設計東西時，就可以清楚知道要點到什麼才會產生效果\n\n\n我用不同顏色的 border 來包住，這樣看比較清楚\n紅色框框是 ul，藍色框框是 li，黑色框框是 a 連結\n\n\n\n\n\n\n\n\n網頁座標screen 是螢幕解析度的大小\npage 是整個網頁內容的頁面大小\nclient 是目前開啟的瀏覽器視窗的大小\n\n\n\n\n\n\n","categories":["JavaScript"]},{"title":"網頁請求狀態碼","url":"/2024/01/06/20240106-1644/","content":"從 Google Chrome 的網頁瀏覽器按右鍵檢查\n然後選 Network，裡面的 Status 就可以查看了\n比較常見的有下面這幾個\n\n\n\n資訊回應：100~199\n101 Switching Protocol：伺服器收到請求，正在切換到所要求內容的通訊協定\n\n\n\n\n\n成功回應：200~299\n200 OK：請求成功，並返回結果\n\n\n\n\n\n重定向：300~399\n304 Not Modified：已經有載入過資料，因此直接從瀏覽器快取中讀取\n\n\n\n\n\n用戶端錯誤 ：400~499\n404 Not Found：伺服器找不到請求的資源\n\n\n\n\n\n伺服器端錯誤 ：500~599\n500 Internal Server Error：伺服器端發生未知或無法處理的錯誤\n\n\n\n\n\n\nreference\nHTTP 狀態碼\n"},{"title":"發出網路請求的 JS 寫法","url":"/2024/01/20/20240120-1348/","content":"第一種是 JavaScript 的原生寫法，有 XMLHttpResquest 和 Fetch\n另一種是用套件，需要額外載入 JS 的 axios\n\n\nXMLHttpResquestfunction reqListener() &#123;  console.log(this.responseText); // 4.回傳成功後就可以看到這個 responseText 的結果&#125;var oReq = new XMLHttpRequest(); // 1.開一個新的 XMLHttpRequestoReq.addEventListener(&quot;load&quot;, reqListener);oReq.open(&quot;GET&quot;, &quot;http://www.example.org/example.txt&quot;); // 2.用 GET 的方法取得網址的資料oReq.send(); // 3.send 送出\n\n\n\nFetchfetch(&quot;http://example.com/movies.json&quot;) // 1.取得網址的資料  .then(function (response) &#123;    return response.json(); // 2.資料回傳要轉成 json 格式  &#125;)  .then(function (myJson) &#123; // 3.轉成功會執行這個函式    console.log(myJson); // 4.資料在 myJson  &#125;);\n\n\n\naxios底層是由 XMLHttpResquest 做出來的\n程式碼比前面兩種都還要精簡\naxios.get(&#x27;/user/12345&#x27;) // 1.用 GET 的方法取得網址的資料  .then(function (response) &#123; // 2.成功會執行這個函式，把結果整理成 response 這個物件，透過各參數取得資料    console.log(response.data); // 抓回來的 json 陣列資料內容    console.log(response.status); // 回傳的狀態碼    console.log(response.statusText);    console.log(response.headers);    console.log(response.config);  &#125;);\n\naxios 的非同步：\nget 等待伺服器回傳資料時，會先直接執行後面的程式碼\n(避免資料太大等太久，程式碼整個停擺)\n等對方回傳之後再回去執行 .then 函式大括號裡面的內容\n\n\nreference\n\n使用 XMLHttpRequest\n\nUsing Fetch\n\naxios\n\n\n","categories":["JavaScript"],"tags":["XMLHttpResquest","Fetch","axios"]},{"title":"函式 (function)","url":"/2023/11/19/20231119-1927/","content":"函式寫法前面的 function 是宣告函式，後面的 hungry() 是函式的名稱\n宣告完之後並不會執行，要呼叫時才會執行\n最下面的 hungry(); 是執行函式，也就是呼叫函式，這樣才會執行\n要呼叫很多次也是可以的\nfunction hungry()&#123;  console.log(&#x27;咕嚕咕嚕&#x27;);  console.log(&#x27;肚子好餓喔！&#x27;);  console.log(&#x27;好想吃拉麵！&#x27;);&#125;hungry();\n\n結果會顯示\n&quot;咕嚕咕嚕&quot;&quot;肚子好餓喔！&quot;&quot;好想吃拉麵！&quot;\n\n\n\n多組函式函式也可以多組輪流呼叫\nfunction hungry()&#123;  console.log(&#x27;咕嚕咕嚕&#x27;);  console.log(&#x27;肚子好餓喔！&#x27;);  console.log(&#x27;好想吃拉麵！&#x27;);&#125;function washHand()&#123;  console.log(&#x27;吃東西前要先洗手&#x27;);&#125;function eat()&#123;  console.log(&#x27;肚子好餓喔！&#x27;);  console.log(&#x27;我要開動啦！&#x27;);&#125;hungry();washHand();eat();\n\n結果會顯示\n&quot;咕嚕咕嚕&quot;&quot;肚子好餓喔！&quot;&quot;好想吃拉麵！&quot;&quot;吃東西前要先洗手&quot;&quot;肚子好餓喔！&quot;&quot;我要開動啦！&quot;\n\n\n\n函式裡面有函式函式的裡面也可以執行函式\n像是這樣\nfunction hungry()&#123;  console.log(&#x27;咕嚕咕嚕&#x27;);  famished();  console.log(&#x27;好想吃拉麵！&#x27;);&#125;function washHand()&#123;  console.log(&#x27;吃東西前要先洗手&#x27;);&#125;function eat()&#123;  famished();  console.log(&#x27;我要開動啦！&#x27;);&#125;function famished()&#123;  console.log(&#x27;肚子好餓喔！&#x27;);&#125;hungry();washHand();eat();\n\n結果會顯示的和剛剛一樣\n&quot;咕嚕咕嚕&quot;&quot;肚子好餓喔！&quot;&quot;好想吃拉麵！&quot;&quot;吃東西前要先洗手&quot;&quot;肚子好餓喔！&quot;&quot;我要開動啦！&quot;\n\n\n\n函式帶參數函式裡面也可以帶入參數\ncount(1, 3); 就是把 1 帶入 num1 中，把 3 帶入 num2 中\nfunction count(num1, num2) &#123;  console.log(num1);  console.log(num2);               &#125;count(1, 3);\n\n因此結果會顯示\n13\n\n\n\n也可以用參數來計算\n這裡設定 total 等於 num1 乘 num2\n因此 count(5, 2); 就是把 5 帶入 num1 中，把 2 帶入 num2 中\nfunction count(num1, num2) &#123;  let total = num1 * num2;  console.log(`$&#123;num1&#125;x$&#123;num2&#125;=$&#123;total&#125;`);&#125;count(5, 2); // &quot;5x2=10&quot;count(3, 4); // &quot;3x4=12&quot;\n\n\n\n用剛剛學的做了一個乘法 function 的計算機\n\n\n\n\n\n\n\n\n搭配 return 使用如果運算比較複雜或是有些字串要處理時，就可以透過 return 把值回傳回來\nreturn 回傳後的值，可以被賦予在變數上\n不過要記得，return 會中斷函式的執行，因此後面的程式碼不會執行\nfunction count(num1, num2) &#123;  let total = num1 + num2;  return total;  console.log(&quot;123&quot;); // 前面有 return，所以不會執行&#125;let num = count(4, 3);console.log(num); // 7\n\n\n\n這裡舉例來說明\n假設購物滿千會有贈品\nAmy 消費 500 元，所以沒有贈品\nDavid 消費 1800 元，所以有贈品\nfunction checkGift(total) &#123;  if (total &gt;= 1000) &#123;    return &#x27;您有滿額贈&#x27;;  &#125; else &#123;    return &#x27;您沒有贈品&#x27;;  &#125;&#125;let AmyTotal = checkGift(500);console.log(AmyTotal); // &quot;您沒有贈品&quot;let DavidTotal = checkGift(1800);console.log(DavidTotal); // &quot;您有滿額贈&quot;\n","categories":["JavaScript"],"tags":["計算機","return","if"]},{"title":"網路請求的種類","url":"/2024/01/28/20240128-2039/","content":"HTTP 請求方法比較常用的有下面幾種\nGET使用 GET 的方式來請求取得資料\n像是輸入網址後瀏覽器會顯示相關的資訊\n\n\nPOST把資料傳送給對方\n像是傳送帳號密碼到伺服器看看有沒有吻合的\n有就回傳正確，沒有就回傳錯誤\n\n\n請求資料格式 request headers 中的 Content-Type 可以告知對方我們要傳送的格式\n比較常見的有下面幾種\napplication&#x2F;x-www-form-urlencoded像是 form 表單預設按下提交按鈕時會傳送到指定的網址去\n\n\napplication&#x2F;json這種是透過 JSON 格式來傳遞參數資料\n像是用 axios 套件發送網路請求時，預設也是這種格式\n\n\nmultipart&#x2F;form-data要傳送檔案(像是圖片、PDF 或是 MP4…之類的)格式時\nContent-Type 就是要用這一種\n\n\ntext&#x2F;plain記事本格式，比較不常用\n\n\nDELETE刪除資料\n\n\nreference\n\nHTTP 請求方法\n\n","categories":["JavaScript"]},{"title":"用 axios 串接 get 外部資料","url":"/2024/02/25/20240205-1922/","content":"這裡用農業部林業及自然保育署-最新活動來練習一下\n\n\n\n\n\n\n\n\nhtml 的地方記得載入 axios 的 CDN (也可以用 NPM 的方式)\n&lt;script src=&quot;https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js&quot;&gt;  &lt;/script&gt;\n\n\n\n先定義 JSON 檔案的網址還有 ul\nconst url = &quot;https://data.moa.gov.tw/Service/OpenData/TransService.aspx?UnitId=105puhavusCM&amp;IsTransData=1&quot;;const list = document.querySelector(&quot;.list&quot;);let data = []; // 宣告變數 data 為空陣列\n\n\n\naxios.get(url)  .then(function (response) &#123;    console.log(&#x27;資料已回傳&#x27;);    data = response.data; // 將撈取回來的資料賦予在變數 data 上    renderData(); //資料回傳後，才呼叫函式  &#125;);\n\n\n\n因為 axios 非同步的關係，所以另外寫一個 renderData()\n在等待回傳資料的同時先註冊這個函式\n資料回傳時就可以直接執行\nfunction renderData() &#123;  console.log(data); // response.data 回傳結果  let str = &quot;&quot;; //宣告 str 為空字串    data.forEach(function(item) &#123; // 透過 data 陣列跑 forEach      str += `&lt;li&gt;$&#123;item.EventName&#125;&lt;/li&gt;`; // 組合 li 內容    &#125;);    list.innerHTML = str; // 透過 innerHTML 給 list 變數賦予值為變數 str&#125;\n","categories":["JavaScript"],"tags":["axios","innerHTML","非同步"]},{"title":"透過 axios 註冊 post 網路請求","url":"/2024/02/25/20240225-1804/","content":"axios 的 post 範例\naxios.post(&#x27;/user&#x27;, &#123;    firstName: &#x27;Fred&#x27;,    lastName: &#x27;Flintstone&#x27;  &#125;)  .then(function (response) &#123;    console.log(response);  &#125;)  .catch(function (error) &#123;    console.log(error);  &#125;);\n\n\n\n練習 axios 註冊 post 的用法\n\n\n首先先引用 CDN\n&lt;script src=&quot;https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js&quot;&gt;  &lt;/script&gt;\n\n\n\n接著是設定要註冊的信箱和密碼\nlet obj = &#123;  email: &#x27;信箱&#x27;,  password: &#x27;密碼&#x27;&#125;\n\n\n\n然後根據最上面的範例\npost 的 () 前面是網址參數，後面是註冊的物件資料(屬性和對應的值)\naxios.post(&#x27;網址&#x27;,obj)  .then(function (response) &#123;    console.log(response);  &#125;)  .catch(function (error) &#123;    console.log(error);  &#125;);\n\n\n\n成功就會顯示對應的訊息\n&#123;  &quot;success&quot;: true,  &quot;result&quot;: &#123;&#125;,  &quot;message&quot;: &quot;帳號註冊成功&quot;&#125;\n\n\n\n失敗也會顯示相對應的訊息\n&#123;  &quot;success&quot;: false,  &quot;result&quot;: &#123;&#125;,  &quot;message&quot;: &quot;此帳號已被使用&quot;&#125;\n\n\n\n\n\n\n\n\n\n\n\nreference\n\naxios\n\n六角學院 AJAX 練習\n\n\n","categories":["JavaScript"]},{"title":"實作 axios 註冊、登入功能","url":"/2024/03/03/20240303-1537/","content":"用前面學過的 axios post 來實作帳號的註冊及登入功能\n註冊先在 HTML 上設定帳號和密碼的輸入欄位還有註冊的按鈕\n&lt;h2&gt;註冊&lt;/h2&gt;帳號：&lt;input type=&quot;email&quot; class=&quot;accountSignup&quot;&gt;密碼：&lt;input type=&quot;passward&quot; class=&quot;passwordSignup&quot;&gt;&lt;input type=&quot;button&quot; value=&quot;註冊&quot; class=&quot;signup&quot;&gt;\n\n\n\njs 部分和前面大致上差不多\n不一樣的地方是之前的範例是直接設定帳號和密碼\n而這裡是要給使用者輸入\n所以要用 querySelector 選取這幾個欄位\n然後設定 obj 為空的物件\nconst accountSignup = document.querySelector(&#x27;.accountSignup&#x27;);const passwordSignup = document.querySelector(&#x27;.passwordSignup&#x27;);const signup = document.querySelector(&#x27;.signup&#x27;);let obj = &#123;&#125;;\n\n\n\n接著要監聽註冊按鈕，點擊時執行 signUp() 這個函式\nsignup.addEventListener(&#x27;click&#x27;,function(e)&#123;  signUp();&#125;);\n\n\n\n接下來的內容比較多，直接註解在程式碼裡面\nfunction signUp()&#123;  if (accountSignup.value == &quot;&quot; || passwordSignup.value==&quot;&quot;)&#123;    alert(&quot;請填寫正確資訊&quot;);     return; // 如果帳號或密碼沒填內容會跳提示出來，然後就不會跑後面的程式了  &#125;  obj.email = accountSignup.value; // 把帳號欄位填入的內容賦予到 obj.email  obj.password = passwordSignup.value; // 把密碼欄位填入的內容賦予到 obj.password  axios.post(&#x27;https://hex-escape-room.herokuapp.com/api/user/signup&#x27;,obj)    .then(function (response) &#123; // 成功讀取到資料會跑後面的程式碼      //console.log(response);      if (response.data.message == &quot;Email 格式不正確&quot;)&#123;        alert(&quot;Email 格式不正確&quot;); // 設定條件，顯示不同的訊息      &#125;      else if (response.data.message == &quot;帳號註冊成功&quot;)&#123;        alert(&quot;帳號註冊成功&quot;);      &#125;      else &#123;        alert(&quot;帳號註冊失敗，此帳號已被使用&quot;);      &#125;      accountSignup.value = &quot;&quot;; // 點擊註冊按鈕後，輸入的欄位會清空內容      passwordSignup.value=&quot;&quot;;    &#125;)    .catch(function (error) &#123; // 失敗未讀取到資料      console.log(error);    &#125;);&#125;\n\n\n\n登入登入的部分和註冊差不多\n一樣在 HTML 上設定帳號和密碼的輸入欄位還有登入的按鈕\n&lt;h2&gt;登入&lt;/h2&gt;帳號：&lt;input type=&quot;email&quot; class=&quot;accountSignin&quot;&gt;密碼：&lt;input type=&quot;passward&quot; class=&quot;passwordSignin&quot;&gt;&lt;input type=&quot;button&quot; value=&quot;登入&quot; class=&quot;signin&quot;&gt;\n\n\n\njs 部分也是用 querySelector 選取登入的幾個欄位\nconst accountSignin = document.querySelector(&#x27;.accountSignin&#x27;);const passwordSignin = document.querySelector(&#x27;.passwordSignin&#x27;);const signin = document.querySelector(&#x27;.signin&#x27;);\n\n\n\n接著要監聽登入按鈕，點擊時執行 signIn() 函式\nsignin.addEventListener(&#x27;click&#x27;,function(e)&#123;  signIn();&#125;);\n\n\n\n接下來的內容也是註解在程式碼裡面\nfunction signIn()&#123;  if (accountSignin.value == &quot;&quot; || passwordSignin.value==&quot;&quot;)&#123;    alert(&quot;請填寫正確資訊&quot;);     return; // 如果帳號或密碼沒填內容會跳提示出來，然後就不會跑後面的程式了  &#125;  obj.email = accountSignin.value; // 把帳號欄位填入的內容賦予到 obj.email  obj.password = passwordSignin.value; // 把密碼欄位填入的內容賦予到 obj.password  axios.post(&#x27;https://hex-escape-room.herokuapp.com/api/user/signin&#x27;,obj)    .then(function (response) &#123; // 成功讀取到資料會跑後面的程式碼      //console.log(response);      if (response.data.message == &quot;登入成功&quot;)&#123;        alert(&quot;登入成功&quot;); // 設定條件，顯示不同的訊息      &#125;      else &#123;        alert(&quot;此帳號不存在或帳號密碼錯誤&quot;);      &#125;      accountSignin.value = &quot;&quot;; // 點擊登入按鈕後，輸入的欄位會清空內容      passwordSignin.value=&quot;&quot;;    &#125;)    .catch(function (error) &#123; // 失敗未讀取到資料      console.log(error);    &#125;);&#125;\n\n\n\n\n\n\n\n\n\n\n\nreference\n\naxios\n\n六角學院 AJAX 練習\n\n\n","categories":["JavaScript"]},{"title":"陣列的處理方法","url":"/2023/12/29/20231229-2050/","content":"forEach會遍歷陣列裡的每一個值，把陣列內的物件或值都跑一遍\nforEach(function(item,index,array)&#123;&#125;)\n\nforEach() 裡面可以帶入三個參數，參數名稱可以自定義\n這三個參數分別是物件、索引、全部陣列\n\n\n下面這個範例用 forEach() 來處理資料\n先設定空字串，然後用 forEach() 跑全部的資料\n同時每筆資料用 += 的方式加上前一筆資料，就可以列出全部的人員名單了\n\n\n身高大於 165 公分的人數及人員部分則是加上 if 來篩選所需要的資料\n最後再用 innerHTML 放到網頁上\n\n\n\n\n\n\n\n\nmapfilter 資料篩選find 尋找頭一筆資料findIndex 尋找資料索引reference\n\nJavaScript 陣列處理方法 filter(), find(), forEach(), map(), every(), some(), reduce()\n\n","categories":["JavaScript"]},{"title":"data- 屬性","url":"/2024/03/22/20240322-2025/","content":"data 後面可以加上自定義的名稱\n這樣有需要用到時就可以很方便的呼叫\n\n\n像是在製作 TO DO LIST 時\n在每個項目加上編號\n像是 data-num=&quot;1&quot;\n&lt;li&gt;洗碗  &lt;input class=&quot;delete&quot; type=&quot;button&quot; data-num=&quot;1&quot; value=&quot;刪除&quot;&gt;&lt;/li&gt;\n\n\n\n然後就可以透過 getAttribute 來取值\nlet num = e.target.getAttribute(&quot;data-num&quot;);console.log(num);\n\n\n\n如果點了洗碗後面的刪除\nconsole.log(num) 就會顯示 data-num 的 1\n\n\n另外，也可以使用 dataset 來取值\n後面接自定義的名稱\n像是 data-num=&quot;1&quot; 就是 dataset.num\nlet num = e.target.dataset.num;console.log(num);\n\n\n\n比較需要注意的是 data 後面的自定義名稱有兩個\n像是 data-item-num 這種，就要改成小駝峰的寫法\n因此就會變成 dataset.itemNum\n\n\n下面這個是代辦清單的範例\n可以打開 Console 來看\n\n\n\n\n\n\n","categories":["JavaScript"],"tags":["代辦清單"]},{"title":"To Do List 待辦事項","url":"/2024/04/17/20240417-2306/","content":"\n\n\n\n\n\n\n\n\nreference\n\n六角學院\n\n","categories":["JavaScript"]},{"title":"Date 物件取得日期和時間","url":"/2024/04/01/20240401-1047/","content":"Date 物件是基於世界標準時間（UTC） 1970 年 1 月 1 日開始的毫秒數值來儲存時間\nDate.now() 和 getTime() 毫秒會計算從 1970 年 1 月 1 日 00:00:00 (UTC) 到當下的毫秒數\n因為每毫秒都不同，所以也可以當成 id 使用\n寫法有下面這兩個\nlet now = Date.now();\n\n或是\nlet id = new Date().getTime();\n\n\n\nDate() 日期和時間這個可以取得當下的日期和時間\n分別是 星期 月 日 年 時:分:秒 GMT+0800 (台北標準時間)\nlet today = Date();\n\n\n\ngetFullYear() 年可以取得是幾年\nlet date = new Date().getFullYear();\n\n\n\ngetMonth() 月可以取得是幾月\n不過是從 0 開始，所以要加 1\n這樣 1 月才會顯示 1 而不是 0\nlet date = new Date().getMonth() +1;\n\n\n\ngetDate() 日可以取得當天的日期是幾日\nlet date = new Date().getDate();\n\n\n\ngetHours() 時可以取得幾時\n幾點是以24小時制來顯示\n所以晚上 8 點就會顯示 20\nlet date = new Date().getHours();\n\n\n\ngetMinutes() 分可以顯示幾分\nlet date = new Date().getMinutes();\n\n\n\ngetSeconds() 秒可以取得當下是幾秒\nlet date = new Date().getSeconds();\n\n\n\ngetDay() 星期可以取得星期幾\n星期日是 0\nlet date = new Date().getDay();\n\n\n\n\n\n\n\n\n\n\n\nreference\n\nDate\n\n","categories":["JavaScript"],"tags":["ID","日期","時間"]},{"title":"箭頭函式","url":"/2024/03/25/20240325-2203/","content":"箭頭函式可以讓程式碼更簡單一些\n像原本的寫法是\nconst total = function (a, b) &#123;  return a * b;  &#125;console.log(total(3, 2)); // 6\n\n\n\n箭頭函式的寫法會變成去掉 function 後面加上 &#x3D;&gt;\nconst total = (a, b) =&gt; &#123;  return a * b;  &#125;console.log(total(3, 2)); // 6\n\n\n\n也可以再精簡把 {} 也去掉\nconst total = (a, b) =&gt; a * b;console.log(total(3, 2)); // 6\n\n\n\n如果只有一個參數時，也可以不加 ()\n像上面的例子如果只有 (a) 也可以只寫 a\n如果沒有參數或有很多個參數時，還是要寫 () 才可以\n\n\n下面是之前的範例改成箭頭函式的寫法\n\n\n\n\n\n\n\n","categories":["JavaScript"]}]